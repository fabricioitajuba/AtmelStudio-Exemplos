
test_lib.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000526  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004b2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00000526  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000526  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000558  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000598  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009d4  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ec  00000000  00000000  00000fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a0  00000000  00000000  000017b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a0  00000000  00000000  00001b50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000461  00000000  00000000  00001bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000025f  00000000  00000000  00002051  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  000022b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  24:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000068 <__ctors_start>:
  68:	65 00       	.word	0x0065	; ????

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf ef       	ldi	r28, 0xFF	; 255
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_clear_bss>:
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a1 30       	cpi	r26, 0x01	; 1
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>

00000086 <__do_global_ctors>:
  86:	10 e0       	ldi	r17, 0x00	; 0
  88:	c5 e3       	ldi	r28, 0x35	; 53
  8a:	d0 e0       	ldi	r29, 0x00	; 0
  8c:	04 c0       	rjmp	.+8      	; 0x96 <__do_global_ctors+0x10>
  8e:	21 97       	sbiw	r28, 0x01	; 1
  90:	fe 01       	movw	r30, r28
  92:	0e 94 51 02 	call	0x4a2	; 0x4a2 <__tablejump2__>
  96:	c4 33       	cpi	r28, 0x34	; 52
  98:	d1 07       	cpc	r29, r17
  9a:	c9 f7       	brne	.-14     	; 0x8e <__do_global_ctors+0x8>
  9c:	0e 94 5e 00 	call	0xbc	; 0xbc <main>
  a0:	0c 94 57 02 	jmp	0x4ae	; 0x4ae <_exit>

000000a4 <__bad_interrupt>:
  a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <_Z41__static_initialization_and_destruction_0ii>:
    /* Replace with your application code */
    while (1) 
    {
		teste1.pisca(50);
    }
}
  a8:	01 97       	sbiw	r24, 0x01	; 1
  aa:	39 f4       	brne	.+14     	; 0xba <_Z41__static_initialization_and_destruction_0ii+0x12>
  ac:	6f 3f       	cpi	r22, 0xFF	; 255
  ae:	7f 4f       	sbci	r23, 0xFF	; 255
  b0:	21 f4       	brne	.+8      	; 0xba <_Z41__static_initialization_and_destruction_0ii+0x12>
#define F_CPU 16000000UL

#include <avr/io.h>
#include "teste.h"

teste teste1;
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	91 e0       	ldi	r25, 0x01	; 1
  b6:	0e 94 6c 00 	call	0xd8	; 0xd8 <_ZN5testeC1Ev>
  ba:	08 95       	ret

000000bc <main>:
int main(void)
{
    /* Replace with your application code */
    while (1) 
    {
		teste1.pisca(50);
  bc:	62 e3       	ldi	r22, 0x32	; 50
  be:	70 e0       	ldi	r23, 0x00	; 0
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	91 e0       	ldi	r25, 0x01	; 1
  c4:	0e 94 70 00 	call	0xe0	; 0xe0 <_ZN5teste5piscaEi>
  c8:	f9 cf       	rjmp	.-14     	; 0xbc <main>

000000ca <_GLOBAL__sub_I_teste1>:
    }
}
  ca:	6f ef       	ldi	r22, 0xFF	; 255
  cc:	7f ef       	ldi	r23, 0xFF	; 255
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	0e 94 54 00 	call	0xa8	; 0xa8 <_Z41__static_initialization_and_destruction_0ii>
  d6:	08 95       	ret

000000d8 <_ZN5testeC1Ev>:
#include <avr/io.h>
#include <util/delay.h>

teste::teste()
{
	DDRB |= (1 << DDB5);
  d8:	84 b1       	in	r24, 0x04	; 4
  da:	80 62       	ori	r24, 0x20	; 32
  dc:	84 b9       	out	0x04, r24	; 4
  de:	08 95       	ret

000000e0 <_ZN5teste5piscaEi>:
}

void teste::pisca(int ms)
{
  e0:	8f 92       	push	r8
  e2:	9f 92       	push	r9
  e4:	af 92       	push	r10
  e6:	bf 92       	push	r11
  e8:	cf 92       	push	r12
  ea:	df 92       	push	r13
  ec:	ef 92       	push	r14
  ee:	ff 92       	push	r15
	PORTB |= (1 << PB5);     // set pin 5 of Port B high
  f0:	85 b1       	in	r24, 0x05	; 5
  f2:	80 62       	ori	r24, 0x20	; 32
  f4:	85 b9       	out	0x05, r24	; 5
	_delay_ms(ms);
  f6:	07 2e       	mov	r0, r23
  f8:	00 0c       	add	r0, r0
  fa:	88 0b       	sbc	r24, r24
  fc:	99 0b       	sbc	r25, r25
  fe:	0e 94 2f 01 	call	0x25e	; 0x25e <__floatsisf>
 102:	4b 01       	movw	r8, r22
 104:	5c 01       	movw	r10, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 106:	20 e0       	ldi	r18, 0x00	; 0
 108:	30 e0       	ldi	r19, 0x00	; 0
 10a:	4a e7       	ldi	r20, 0x7A	; 122
 10c:	55 e4       	ldi	r21, 0x45	; 69
 10e:	0e 94 bc 01 	call	0x378	; 0x378 <__mulsf3>
 112:	6b 01       	movw	r12, r22
 114:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
 116:	20 e0       	ldi	r18, 0x00	; 0
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	40 e8       	ldi	r20, 0x80	; 128
 11c:	5f e3       	ldi	r21, 0x3F	; 63
 11e:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <__cmpsf2>
 122:	88 23       	and	r24, r24
 124:	1c f1       	brlt	.+70     	; 0x16c <_ZN5teste5piscaEi+0x8c>
		__ticks = 1;
	else if (__tmp > 65535)
 126:	20 e0       	ldi	r18, 0x00	; 0
 128:	3f ef       	ldi	r19, 0xFF	; 255
 12a:	4f e7       	ldi	r20, 0x7F	; 127
 12c:	57 e4       	ldi	r21, 0x47	; 71
 12e:	c7 01       	movw	r24, r14
 130:	b6 01       	movw	r22, r12
 132:	0e 94 b7 01 	call	0x36e	; 0x36e <__gesf2>
 136:	18 16       	cp	r1, r24
 138:	a4 f4       	brge	.+40     	; 0x162 <_ZN5teste5piscaEi+0x82>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 13a:	20 e0       	ldi	r18, 0x00	; 0
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	40 e2       	ldi	r20, 0x20	; 32
 140:	51 e4       	ldi	r21, 0x41	; 65
 142:	c5 01       	movw	r24, r10
 144:	b4 01       	movw	r22, r8
 146:	0e 94 bc 01 	call	0x378	; 0x378 <__mulsf3>
 14a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <__fixunssfsi>
		while(__ticks)
 14e:	61 15       	cp	r22, r1
 150:	71 05       	cpc	r23, r1
 152:	89 f0       	breq	.+34     	; 0x176 <_ZN5teste5piscaEi+0x96>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 154:	80 e9       	ldi	r24, 0x90	; 144
 156:	91 e0       	ldi	r25, 0x01	; 1
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <_ZN5teste5piscaEi+0x78>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 15c:	61 50       	subi	r22, 0x01	; 1
 15e:	71 09       	sbc	r23, r1
 160:	f6 cf       	rjmp	.-20     	; 0x14e <_ZN5teste5piscaEi+0x6e>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 162:	c7 01       	movw	r24, r14
 164:	b6 01       	movw	r22, r12
 166:	0e 94 fe 00 	call	0x1fc	; 0x1fc <__fixunssfsi>
 16a:	02 c0       	rjmp	.+4      	; 0x170 <_ZN5teste5piscaEi+0x90>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
 16c:	61 e0       	ldi	r22, 0x01	; 1
 16e:	70 e0       	ldi	r23, 0x00	; 0
 170:	cb 01       	movw	r24, r22
 172:	01 97       	sbiw	r24, 0x01	; 1
 174:	f1 f7       	brne	.-4      	; 0x172 <_ZN5teste5piscaEi+0x92>
	PORTB &= ~(1 << PB5);    // set pin 5 of Port B low
 176:	85 b1       	in	r24, 0x05	; 5
 178:	8f 7d       	andi	r24, 0xDF	; 223
 17a:	85 b9       	out	0x05, r24	; 5
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
 17c:	20 e0       	ldi	r18, 0x00	; 0
 17e:	30 e0       	ldi	r19, 0x00	; 0
 180:	40 e8       	ldi	r20, 0x80	; 128
 182:	5f e3       	ldi	r21, 0x3F	; 63
 184:	c7 01       	movw	r24, r14
 186:	b6 01       	movw	r22, r12
 188:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <__cmpsf2>
 18c:	88 23       	and	r24, r24
 18e:	1c f1       	brlt	.+70     	; 0x1d6 <_ZN5teste5piscaEi+0xf6>
		__ticks = 1;
	else if (__tmp > 65535)
 190:	20 e0       	ldi	r18, 0x00	; 0
 192:	3f ef       	ldi	r19, 0xFF	; 255
 194:	4f e7       	ldi	r20, 0x7F	; 127
 196:	57 e4       	ldi	r21, 0x47	; 71
 198:	c7 01       	movw	r24, r14
 19a:	b6 01       	movw	r22, r12
 19c:	0e 94 b7 01 	call	0x36e	; 0x36e <__gesf2>
 1a0:	18 16       	cp	r1, r24
 1a2:	a4 f4       	brge	.+40     	; 0x1cc <_ZN5teste5piscaEi+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 1a4:	20 e0       	ldi	r18, 0x00	; 0
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	40 e2       	ldi	r20, 0x20	; 32
 1aa:	51 e4       	ldi	r21, 0x41	; 65
 1ac:	c5 01       	movw	r24, r10
 1ae:	b4 01       	movw	r22, r8
 1b0:	0e 94 bc 01 	call	0x378	; 0x378 <__mulsf3>
 1b4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <__fixunssfsi>
		while(__ticks)
 1b8:	61 15       	cp	r22, r1
 1ba:	71 05       	cpc	r23, r1
 1bc:	89 f0       	breq	.+34     	; 0x1e0 <_ZN5teste5piscaEi+0x100>
 1be:	80 e9       	ldi	r24, 0x90	; 144
 1c0:	91 e0       	ldi	r25, 0x01	; 1
 1c2:	01 97       	sbiw	r24, 0x01	; 1
 1c4:	f1 f7       	brne	.-4      	; 0x1c2 <_ZN5teste5piscaEi+0xe2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1c6:	61 50       	subi	r22, 0x01	; 1
 1c8:	71 09       	sbc	r23, r1
 1ca:	f6 cf       	rjmp	.-20     	; 0x1b8 <_ZN5teste5piscaEi+0xd8>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 1cc:	c7 01       	movw	r24, r14
 1ce:	b6 01       	movw	r22, r12
 1d0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <__fixunssfsi>
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <_ZN5teste5piscaEi+0xfa>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
 1d6:	61 e0       	ldi	r22, 0x01	; 1
 1d8:	70 e0       	ldi	r23, 0x00	; 0
 1da:	cb 01       	movw	r24, r22
 1dc:	01 97       	sbiw	r24, 0x01	; 1
 1de:	f1 f7       	brne	.-4      	; 0x1dc <_ZN5teste5piscaEi+0xfc>
	_delay_ms(ms);
 1e0:	ff 90       	pop	r15
 1e2:	ef 90       	pop	r14
 1e4:	df 90       	pop	r13
 1e6:	cf 90       	pop	r12
 1e8:	bf 90       	pop	r11
 1ea:	af 90       	pop	r10
 1ec:	9f 90       	pop	r9
 1ee:	8f 90       	pop	r8
 1f0:	08 95       	ret

000001f2 <__cmpsf2>:
 1f2:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <__fp_cmp>
 1f6:	08 f4       	brcc	.+2      	; 0x1fa <__cmpsf2+0x8>
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	08 95       	ret

000001fc <__fixunssfsi>:
 1fc:	0e 94 96 01 	call	0x32c	; 0x32c <__fp_splitA>
 200:	88 f0       	brcs	.+34     	; 0x224 <__fixunssfsi+0x28>
 202:	9f 57       	subi	r25, 0x7F	; 127
 204:	98 f0       	brcs	.+38     	; 0x22c <__fixunssfsi+0x30>
 206:	b9 2f       	mov	r27, r25
 208:	99 27       	eor	r25, r25
 20a:	b7 51       	subi	r27, 0x17	; 23
 20c:	b0 f0       	brcs	.+44     	; 0x23a <__fixunssfsi+0x3e>
 20e:	e1 f0       	breq	.+56     	; 0x248 <__fixunssfsi+0x4c>
 210:	66 0f       	add	r22, r22
 212:	77 1f       	adc	r23, r23
 214:	88 1f       	adc	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	1a f0       	brmi	.+6      	; 0x220 <__fixunssfsi+0x24>
 21a:	ba 95       	dec	r27
 21c:	c9 f7       	brne	.-14     	; 0x210 <__fixunssfsi+0x14>
 21e:	14 c0       	rjmp	.+40     	; 0x248 <__fixunssfsi+0x4c>
 220:	b1 30       	cpi	r27, 0x01	; 1
 222:	91 f0       	breq	.+36     	; 0x248 <__fixunssfsi+0x4c>
 224:	0e 94 b0 01 	call	0x360	; 0x360 <__fp_zero>
 228:	b1 e0       	ldi	r27, 0x01	; 1
 22a:	08 95       	ret
 22c:	0c 94 b0 01 	jmp	0x360	; 0x360 <__fp_zero>
 230:	67 2f       	mov	r22, r23
 232:	78 2f       	mov	r23, r24
 234:	88 27       	eor	r24, r24
 236:	b8 5f       	subi	r27, 0xF8	; 248
 238:	39 f0       	breq	.+14     	; 0x248 <__fixunssfsi+0x4c>
 23a:	b9 3f       	cpi	r27, 0xF9	; 249
 23c:	cc f3       	brlt	.-14     	; 0x230 <__fixunssfsi+0x34>
 23e:	86 95       	lsr	r24
 240:	77 95       	ror	r23
 242:	67 95       	ror	r22
 244:	b3 95       	inc	r27
 246:	d9 f7       	brne	.-10     	; 0x23e <__fixunssfsi+0x42>
 248:	3e f4       	brtc	.+14     	; 0x258 <__fixunssfsi+0x5c>
 24a:	90 95       	com	r25
 24c:	80 95       	com	r24
 24e:	70 95       	com	r23
 250:	61 95       	neg	r22
 252:	7f 4f       	sbci	r23, 0xFF	; 255
 254:	8f 4f       	sbci	r24, 0xFF	; 255
 256:	9f 4f       	sbci	r25, 0xFF	; 255
 258:	08 95       	ret

0000025a <__floatunsisf>:
 25a:	e8 94       	clt
 25c:	09 c0       	rjmp	.+18     	; 0x270 <__floatsisf+0x12>

0000025e <__floatsisf>:
 25e:	97 fb       	bst	r25, 7
 260:	3e f4       	brtc	.+14     	; 0x270 <__floatsisf+0x12>
 262:	90 95       	com	r25
 264:	80 95       	com	r24
 266:	70 95       	com	r23
 268:	61 95       	neg	r22
 26a:	7f 4f       	sbci	r23, 0xFF	; 255
 26c:	8f 4f       	sbci	r24, 0xFF	; 255
 26e:	9f 4f       	sbci	r25, 0xFF	; 255
 270:	99 23       	and	r25, r25
 272:	a9 f0       	breq	.+42     	; 0x29e <__floatsisf+0x40>
 274:	f9 2f       	mov	r31, r25
 276:	96 e9       	ldi	r25, 0x96	; 150
 278:	bb 27       	eor	r27, r27
 27a:	93 95       	inc	r25
 27c:	f6 95       	lsr	r31
 27e:	87 95       	ror	r24
 280:	77 95       	ror	r23
 282:	67 95       	ror	r22
 284:	b7 95       	ror	r27
 286:	f1 11       	cpse	r31, r1
 288:	f8 cf       	rjmp	.-16     	; 0x27a <__floatsisf+0x1c>
 28a:	fa f4       	brpl	.+62     	; 0x2ca <__floatsisf+0x6c>
 28c:	bb 0f       	add	r27, r27
 28e:	11 f4       	brne	.+4      	; 0x294 <__floatsisf+0x36>
 290:	60 ff       	sbrs	r22, 0
 292:	1b c0       	rjmp	.+54     	; 0x2ca <__floatsisf+0x6c>
 294:	6f 5f       	subi	r22, 0xFF	; 255
 296:	7f 4f       	sbci	r23, 0xFF	; 255
 298:	8f 4f       	sbci	r24, 0xFF	; 255
 29a:	9f 4f       	sbci	r25, 0xFF	; 255
 29c:	16 c0       	rjmp	.+44     	; 0x2ca <__floatsisf+0x6c>
 29e:	88 23       	and	r24, r24
 2a0:	11 f0       	breq	.+4      	; 0x2a6 <__floatsisf+0x48>
 2a2:	96 e9       	ldi	r25, 0x96	; 150
 2a4:	11 c0       	rjmp	.+34     	; 0x2c8 <__floatsisf+0x6a>
 2a6:	77 23       	and	r23, r23
 2a8:	21 f0       	breq	.+8      	; 0x2b2 <__floatsisf+0x54>
 2aa:	9e e8       	ldi	r25, 0x8E	; 142
 2ac:	87 2f       	mov	r24, r23
 2ae:	76 2f       	mov	r23, r22
 2b0:	05 c0       	rjmp	.+10     	; 0x2bc <__floatsisf+0x5e>
 2b2:	66 23       	and	r22, r22
 2b4:	71 f0       	breq	.+28     	; 0x2d2 <__floatsisf+0x74>
 2b6:	96 e8       	ldi	r25, 0x86	; 134
 2b8:	86 2f       	mov	r24, r22
 2ba:	70 e0       	ldi	r23, 0x00	; 0
 2bc:	60 e0       	ldi	r22, 0x00	; 0
 2be:	2a f0       	brmi	.+10     	; 0x2ca <__floatsisf+0x6c>
 2c0:	9a 95       	dec	r25
 2c2:	66 0f       	add	r22, r22
 2c4:	77 1f       	adc	r23, r23
 2c6:	88 1f       	adc	r24, r24
 2c8:	da f7       	brpl	.-10     	; 0x2c0 <__floatsisf+0x62>
 2ca:	88 0f       	add	r24, r24
 2cc:	96 95       	lsr	r25
 2ce:	87 95       	ror	r24
 2d0:	97 f9       	bld	r25, 7
 2d2:	08 95       	ret

000002d4 <__fp_cmp>:
 2d4:	99 0f       	add	r25, r25
 2d6:	00 08       	sbc	r0, r0
 2d8:	55 0f       	add	r21, r21
 2da:	aa 0b       	sbc	r26, r26
 2dc:	e0 e8       	ldi	r30, 0x80	; 128
 2de:	fe ef       	ldi	r31, 0xFE	; 254
 2e0:	16 16       	cp	r1, r22
 2e2:	17 06       	cpc	r1, r23
 2e4:	e8 07       	cpc	r30, r24
 2e6:	f9 07       	cpc	r31, r25
 2e8:	c0 f0       	brcs	.+48     	; 0x31a <__fp_cmp+0x46>
 2ea:	12 16       	cp	r1, r18
 2ec:	13 06       	cpc	r1, r19
 2ee:	e4 07       	cpc	r30, r20
 2f0:	f5 07       	cpc	r31, r21
 2f2:	98 f0       	brcs	.+38     	; 0x31a <__fp_cmp+0x46>
 2f4:	62 1b       	sub	r22, r18
 2f6:	73 0b       	sbc	r23, r19
 2f8:	84 0b       	sbc	r24, r20
 2fa:	95 0b       	sbc	r25, r21
 2fc:	39 f4       	brne	.+14     	; 0x30c <__fp_cmp+0x38>
 2fe:	0a 26       	eor	r0, r26
 300:	61 f0       	breq	.+24     	; 0x31a <__fp_cmp+0x46>
 302:	23 2b       	or	r18, r19
 304:	24 2b       	or	r18, r20
 306:	25 2b       	or	r18, r21
 308:	21 f4       	brne	.+8      	; 0x312 <__fp_cmp+0x3e>
 30a:	08 95       	ret
 30c:	0a 26       	eor	r0, r26
 30e:	09 f4       	brne	.+2      	; 0x312 <__fp_cmp+0x3e>
 310:	a1 40       	sbci	r26, 0x01	; 1
 312:	a6 95       	lsr	r26
 314:	8f ef       	ldi	r24, 0xFF	; 255
 316:	81 1d       	adc	r24, r1
 318:	81 1d       	adc	r24, r1
 31a:	08 95       	ret

0000031c <__fp_split3>:
 31c:	57 fd       	sbrc	r21, 7
 31e:	90 58       	subi	r25, 0x80	; 128
 320:	44 0f       	add	r20, r20
 322:	55 1f       	adc	r21, r21
 324:	59 f0       	breq	.+22     	; 0x33c <__fp_splitA+0x10>
 326:	5f 3f       	cpi	r21, 0xFF	; 255
 328:	71 f0       	breq	.+28     	; 0x346 <__fp_splitA+0x1a>
 32a:	47 95       	ror	r20

0000032c <__fp_splitA>:
 32c:	88 0f       	add	r24, r24
 32e:	97 fb       	bst	r25, 7
 330:	99 1f       	adc	r25, r25
 332:	61 f0       	breq	.+24     	; 0x34c <__fp_splitA+0x20>
 334:	9f 3f       	cpi	r25, 0xFF	; 255
 336:	79 f0       	breq	.+30     	; 0x356 <__fp_splitA+0x2a>
 338:	87 95       	ror	r24
 33a:	08 95       	ret
 33c:	12 16       	cp	r1, r18
 33e:	13 06       	cpc	r1, r19
 340:	14 06       	cpc	r1, r20
 342:	55 1f       	adc	r21, r21
 344:	f2 cf       	rjmp	.-28     	; 0x32a <__fp_split3+0xe>
 346:	46 95       	lsr	r20
 348:	f1 df       	rcall	.-30     	; 0x32c <__fp_splitA>
 34a:	08 c0       	rjmp	.+16     	; 0x35c <__fp_splitA+0x30>
 34c:	16 16       	cp	r1, r22
 34e:	17 06       	cpc	r1, r23
 350:	18 06       	cpc	r1, r24
 352:	99 1f       	adc	r25, r25
 354:	f1 cf       	rjmp	.-30     	; 0x338 <__fp_splitA+0xc>
 356:	86 95       	lsr	r24
 358:	71 05       	cpc	r23, r1
 35a:	61 05       	cpc	r22, r1
 35c:	08 94       	sec
 35e:	08 95       	ret

00000360 <__fp_zero>:
 360:	e8 94       	clt

00000362 <__fp_szero>:
 362:	bb 27       	eor	r27, r27
 364:	66 27       	eor	r22, r22
 366:	77 27       	eor	r23, r23
 368:	cb 01       	movw	r24, r22
 36a:	97 f9       	bld	r25, 7
 36c:	08 95       	ret

0000036e <__gesf2>:
 36e:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <__fp_cmp>
 372:	08 f4       	brcc	.+2      	; 0x376 <__gesf2+0x8>
 374:	8f ef       	ldi	r24, 0xFF	; 255
 376:	08 95       	ret

00000378 <__mulsf3>:
 378:	0e 94 cf 01 	call	0x39e	; 0x39e <__mulsf3x>
 37c:	0c 94 40 02 	jmp	0x480	; 0x480 <__fp_round>
 380:	0e 94 32 02 	call	0x464	; 0x464 <__fp_pscA>
 384:	38 f0       	brcs	.+14     	; 0x394 <__mulsf3+0x1c>
 386:	0e 94 39 02 	call	0x472	; 0x472 <__fp_pscB>
 38a:	20 f0       	brcs	.+8      	; 0x394 <__mulsf3+0x1c>
 38c:	95 23       	and	r25, r21
 38e:	11 f0       	breq	.+4      	; 0x394 <__mulsf3+0x1c>
 390:	0c 94 29 02 	jmp	0x452	; 0x452 <__fp_inf>
 394:	0c 94 2f 02 	jmp	0x45e	; 0x45e <__fp_nan>
 398:	11 24       	eor	r1, r1
 39a:	0c 94 b1 01 	jmp	0x362	; 0x362 <__fp_szero>

0000039e <__mulsf3x>:
 39e:	0e 94 8e 01 	call	0x31c	; 0x31c <__fp_split3>
 3a2:	70 f3       	brcs	.-36     	; 0x380 <__mulsf3+0x8>

000003a4 <__mulsf3_pse>:
 3a4:	95 9f       	mul	r25, r21
 3a6:	c1 f3       	breq	.-16     	; 0x398 <__mulsf3+0x20>
 3a8:	95 0f       	add	r25, r21
 3aa:	50 e0       	ldi	r21, 0x00	; 0
 3ac:	55 1f       	adc	r21, r21
 3ae:	62 9f       	mul	r22, r18
 3b0:	f0 01       	movw	r30, r0
 3b2:	72 9f       	mul	r23, r18
 3b4:	bb 27       	eor	r27, r27
 3b6:	f0 0d       	add	r31, r0
 3b8:	b1 1d       	adc	r27, r1
 3ba:	63 9f       	mul	r22, r19
 3bc:	aa 27       	eor	r26, r26
 3be:	f0 0d       	add	r31, r0
 3c0:	b1 1d       	adc	r27, r1
 3c2:	aa 1f       	adc	r26, r26
 3c4:	64 9f       	mul	r22, r20
 3c6:	66 27       	eor	r22, r22
 3c8:	b0 0d       	add	r27, r0
 3ca:	a1 1d       	adc	r26, r1
 3cc:	66 1f       	adc	r22, r22
 3ce:	82 9f       	mul	r24, r18
 3d0:	22 27       	eor	r18, r18
 3d2:	b0 0d       	add	r27, r0
 3d4:	a1 1d       	adc	r26, r1
 3d6:	62 1f       	adc	r22, r18
 3d8:	73 9f       	mul	r23, r19
 3da:	b0 0d       	add	r27, r0
 3dc:	a1 1d       	adc	r26, r1
 3de:	62 1f       	adc	r22, r18
 3e0:	83 9f       	mul	r24, r19
 3e2:	a0 0d       	add	r26, r0
 3e4:	61 1d       	adc	r22, r1
 3e6:	22 1f       	adc	r18, r18
 3e8:	74 9f       	mul	r23, r20
 3ea:	33 27       	eor	r19, r19
 3ec:	a0 0d       	add	r26, r0
 3ee:	61 1d       	adc	r22, r1
 3f0:	23 1f       	adc	r18, r19
 3f2:	84 9f       	mul	r24, r20
 3f4:	60 0d       	add	r22, r0
 3f6:	21 1d       	adc	r18, r1
 3f8:	82 2f       	mov	r24, r18
 3fa:	76 2f       	mov	r23, r22
 3fc:	6a 2f       	mov	r22, r26
 3fe:	11 24       	eor	r1, r1
 400:	9f 57       	subi	r25, 0x7F	; 127
 402:	50 40       	sbci	r21, 0x00	; 0
 404:	9a f0       	brmi	.+38     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 406:	f1 f0       	breq	.+60     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 408:	88 23       	and	r24, r24
 40a:	4a f0       	brmi	.+18     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 40c:	ee 0f       	add	r30, r30
 40e:	ff 1f       	adc	r31, r31
 410:	bb 1f       	adc	r27, r27
 412:	66 1f       	adc	r22, r22
 414:	77 1f       	adc	r23, r23
 416:	88 1f       	adc	r24, r24
 418:	91 50       	subi	r25, 0x01	; 1
 41a:	50 40       	sbci	r21, 0x00	; 0
 41c:	a9 f7       	brne	.-22     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 41e:	9e 3f       	cpi	r25, 0xFE	; 254
 420:	51 05       	cpc	r21, r1
 422:	80 f0       	brcs	.+32     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 424:	0c 94 29 02 	jmp	0x452	; 0x452 <__fp_inf>
 428:	0c 94 b1 01 	jmp	0x362	; 0x362 <__fp_szero>
 42c:	5f 3f       	cpi	r21, 0xFF	; 255
 42e:	e4 f3       	brlt	.-8      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 430:	98 3e       	cpi	r25, 0xE8	; 232
 432:	d4 f3       	brlt	.-12     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 434:	86 95       	lsr	r24
 436:	77 95       	ror	r23
 438:	67 95       	ror	r22
 43a:	b7 95       	ror	r27
 43c:	f7 95       	ror	r31
 43e:	e7 95       	ror	r30
 440:	9f 5f       	subi	r25, 0xFF	; 255
 442:	c1 f7       	brne	.-16     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 444:	fe 2b       	or	r31, r30
 446:	88 0f       	add	r24, r24
 448:	91 1d       	adc	r25, r1
 44a:	96 95       	lsr	r25
 44c:	87 95       	ror	r24
 44e:	97 f9       	bld	r25, 7
 450:	08 95       	ret

00000452 <__fp_inf>:
 452:	97 f9       	bld	r25, 7
 454:	9f 67       	ori	r25, 0x7F	; 127
 456:	80 e8       	ldi	r24, 0x80	; 128
 458:	70 e0       	ldi	r23, 0x00	; 0
 45a:	60 e0       	ldi	r22, 0x00	; 0
 45c:	08 95       	ret

0000045e <__fp_nan>:
 45e:	9f ef       	ldi	r25, 0xFF	; 255
 460:	80 ec       	ldi	r24, 0xC0	; 192
 462:	08 95       	ret

00000464 <__fp_pscA>:
 464:	00 24       	eor	r0, r0
 466:	0a 94       	dec	r0
 468:	16 16       	cp	r1, r22
 46a:	17 06       	cpc	r1, r23
 46c:	18 06       	cpc	r1, r24
 46e:	09 06       	cpc	r0, r25
 470:	08 95       	ret

00000472 <__fp_pscB>:
 472:	00 24       	eor	r0, r0
 474:	0a 94       	dec	r0
 476:	12 16       	cp	r1, r18
 478:	13 06       	cpc	r1, r19
 47a:	14 06       	cpc	r1, r20
 47c:	05 06       	cpc	r0, r21
 47e:	08 95       	ret

00000480 <__fp_round>:
 480:	09 2e       	mov	r0, r25
 482:	03 94       	inc	r0
 484:	00 0c       	add	r0, r0
 486:	11 f4       	brne	.+4      	; 0x48c <__fp_round+0xc>
 488:	88 23       	and	r24, r24
 48a:	52 f0       	brmi	.+20     	; 0x4a0 <__fp_round+0x20>
 48c:	bb 0f       	add	r27, r27
 48e:	40 f4       	brcc	.+16     	; 0x4a0 <__fp_round+0x20>
 490:	bf 2b       	or	r27, r31
 492:	11 f4       	brne	.+4      	; 0x498 <__fp_round+0x18>
 494:	60 ff       	sbrs	r22, 0
 496:	04 c0       	rjmp	.+8      	; 0x4a0 <__fp_round+0x20>
 498:	6f 5f       	subi	r22, 0xFF	; 255
 49a:	7f 4f       	sbci	r23, 0xFF	; 255
 49c:	8f 4f       	sbci	r24, 0xFF	; 255
 49e:	9f 4f       	sbci	r25, 0xFF	; 255
 4a0:	08 95       	ret

000004a2 <__tablejump2__>:
 4a2:	ee 0f       	add	r30, r30
 4a4:	ff 1f       	adc	r31, r31
 4a6:	05 90       	lpm	r0, Z+
 4a8:	f4 91       	lpm	r31, Z
 4aa:	e0 2d       	mov	r30, r0
 4ac:	09 94       	ijmp

000004ae <_exit>:
 4ae:	f8 94       	cli

000004b0 <__stop_program>:
 4b0:	ff cf       	rjmp	.-2      	; 0x4b0 <__stop_program>
