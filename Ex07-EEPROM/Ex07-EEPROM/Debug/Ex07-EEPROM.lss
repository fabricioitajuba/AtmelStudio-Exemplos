
Ex07-EEPROM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  000013ce  00001462  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080011c  0080011c  0000147e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000147e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000014dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00001520  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001192  00000000  00000000  00001640  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a78  00000000  00000000  000027d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ec7  00000000  00000000  0000324a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000228  00000000  00000000  00004114  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000052d  00000000  00000000  0000433c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000141b  00000000  00000000  00004869  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00005c84  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ee ec       	ldi	r30, 0xCE	; 206
     17e:	f3 e1       	ldi	r31, 0x13	; 19
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	ac 31       	cpi	r26, 0x1C	; 28
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	ac e1       	ldi	r26, 0x1C	; 28
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a2 32       	cpi	r26, 0x22	; 34
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 90 03 	call	0x720	; 0x720 <main>
     1a0:	0c 94 e5 09 	jmp	0x13ca	; 0x13ca <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <pinMode>:
		else if(pino == 20)
			PORTD |= (1 << PD5);
		else if(pino == 21)
			PORTD |= (1 << PD6);
		else if(pino == 22)
			PORTD |= (1 << PD7);
     1a8:	61 15       	cp	r22, r1
     1aa:	71 05       	cpc	r23, r1
     1ac:	09 f0       	breq	.+2      	; 0x1b0 <pinMode+0x8>
     1ae:	a0 c0       	rjmp	.+320    	; 0x2f0 <pinMode+0x148>
     1b0:	00 97       	sbiw	r24, 0x00	; 0
     1b2:	21 f4       	brne	.+8      	; 0x1bc <pinMode+0x14>
     1b4:	84 b1       	in	r24, 0x04	; 4
     1b6:	8e 7f       	andi	r24, 0xFE	; 254
     1b8:	84 b9       	out	0x04, r24	; 4
     1ba:	08 95       	ret
     1bc:	81 30       	cpi	r24, 0x01	; 1
     1be:	91 05       	cpc	r25, r1
     1c0:	21 f4       	brne	.+8      	; 0x1ca <pinMode+0x22>
     1c2:	84 b1       	in	r24, 0x04	; 4
     1c4:	8d 7f       	andi	r24, 0xFD	; 253
     1c6:	84 b9       	out	0x04, r24	; 4
     1c8:	08 95       	ret
     1ca:	82 30       	cpi	r24, 0x02	; 2
     1cc:	91 05       	cpc	r25, r1
     1ce:	21 f4       	brne	.+8      	; 0x1d8 <pinMode+0x30>
     1d0:	84 b1       	in	r24, 0x04	; 4
     1d2:	8b 7f       	andi	r24, 0xFB	; 251
     1d4:	84 b9       	out	0x04, r24	; 4
     1d6:	08 95       	ret
     1d8:	83 30       	cpi	r24, 0x03	; 3
     1da:	91 05       	cpc	r25, r1
     1dc:	21 f4       	brne	.+8      	; 0x1e6 <pinMode+0x3e>
     1de:	84 b1       	in	r24, 0x04	; 4
     1e0:	87 7f       	andi	r24, 0xF7	; 247
     1e2:	84 b9       	out	0x04, r24	; 4
     1e4:	08 95       	ret
     1e6:	84 30       	cpi	r24, 0x04	; 4
     1e8:	91 05       	cpc	r25, r1
     1ea:	21 f4       	brne	.+8      	; 0x1f4 <pinMode+0x4c>
     1ec:	84 b1       	in	r24, 0x04	; 4
     1ee:	8f 7e       	andi	r24, 0xEF	; 239
     1f0:	84 b9       	out	0x04, r24	; 4
     1f2:	08 95       	ret
     1f4:	85 30       	cpi	r24, 0x05	; 5
     1f6:	91 05       	cpc	r25, r1
     1f8:	21 f4       	brne	.+8      	; 0x202 <pinMode+0x5a>
     1fa:	84 b1       	in	r24, 0x04	; 4
     1fc:	8f 7d       	andi	r24, 0xDF	; 223
     1fe:	84 b9       	out	0x04, r24	; 4
     200:	08 95       	ret
     202:	86 30       	cpi	r24, 0x06	; 6
     204:	91 05       	cpc	r25, r1
     206:	21 f4       	brne	.+8      	; 0x210 <pinMode+0x68>
     208:	84 b1       	in	r24, 0x04	; 4
     20a:	8f 7b       	andi	r24, 0xBF	; 191
     20c:	84 b9       	out	0x04, r24	; 4
     20e:	08 95       	ret
     210:	87 30       	cpi	r24, 0x07	; 7
     212:	91 05       	cpc	r25, r1
     214:	21 f4       	brne	.+8      	; 0x21e <pinMode+0x76>
     216:	84 b1       	in	r24, 0x04	; 4
     218:	8f 77       	andi	r24, 0x7F	; 127
     21a:	84 b9       	out	0x04, r24	; 4
     21c:	08 95       	ret
     21e:	88 30       	cpi	r24, 0x08	; 8
     220:	91 05       	cpc	r25, r1
     222:	21 f4       	brne	.+8      	; 0x22c <pinMode+0x84>
     224:	87 b1       	in	r24, 0x07	; 7
     226:	8e 7f       	andi	r24, 0xFE	; 254
     228:	87 b9       	out	0x07, r24	; 7
     22a:	08 95       	ret
     22c:	89 30       	cpi	r24, 0x09	; 9
     22e:	91 05       	cpc	r25, r1
     230:	21 f4       	brne	.+8      	; 0x23a <pinMode+0x92>
     232:	87 b1       	in	r24, 0x07	; 7
     234:	8d 7f       	andi	r24, 0xFD	; 253
     236:	87 b9       	out	0x07, r24	; 7
     238:	08 95       	ret
     23a:	8a 30       	cpi	r24, 0x0A	; 10
     23c:	91 05       	cpc	r25, r1
     23e:	21 f4       	brne	.+8      	; 0x248 <pinMode+0xa0>
     240:	87 b1       	in	r24, 0x07	; 7
     242:	8b 7f       	andi	r24, 0xFB	; 251
     244:	87 b9       	out	0x07, r24	; 7
     246:	08 95       	ret
     248:	8b 30       	cpi	r24, 0x0B	; 11
     24a:	91 05       	cpc	r25, r1
     24c:	21 f4       	brne	.+8      	; 0x256 <pinMode+0xae>
     24e:	87 b1       	in	r24, 0x07	; 7
     250:	87 7f       	andi	r24, 0xF7	; 247
     252:	87 b9       	out	0x07, r24	; 7
     254:	08 95       	ret
     256:	8c 30       	cpi	r24, 0x0C	; 12
     258:	91 05       	cpc	r25, r1
     25a:	21 f4       	brne	.+8      	; 0x264 <pinMode+0xbc>
     25c:	87 b1       	in	r24, 0x07	; 7
     25e:	8f 7e       	andi	r24, 0xEF	; 239
     260:	87 b9       	out	0x07, r24	; 7
     262:	08 95       	ret
     264:	8d 30       	cpi	r24, 0x0D	; 13
     266:	91 05       	cpc	r25, r1
     268:	21 f4       	brne	.+8      	; 0x272 <pinMode+0xca>
     26a:	87 b1       	in	r24, 0x07	; 7
     26c:	8f 7d       	andi	r24, 0xDF	; 223
     26e:	87 b9       	out	0x07, r24	; 7
     270:	08 95       	ret
     272:	8e 30       	cpi	r24, 0x0E	; 14
     274:	91 05       	cpc	r25, r1
     276:	21 f4       	brne	.+8      	; 0x280 <pinMode+0xd8>
     278:	87 b1       	in	r24, 0x07	; 7
     27a:	8f 7b       	andi	r24, 0xBF	; 191
     27c:	87 b9       	out	0x07, r24	; 7
     27e:	08 95       	ret
     280:	8f 30       	cpi	r24, 0x0F	; 15
     282:	91 05       	cpc	r25, r1
     284:	21 f4       	brne	.+8      	; 0x28e <pinMode+0xe6>
     286:	8a b1       	in	r24, 0x0a	; 10
     288:	8e 7f       	andi	r24, 0xFE	; 254
     28a:	8a b9       	out	0x0a, r24	; 10
     28c:	08 95       	ret
     28e:	80 31       	cpi	r24, 0x10	; 16
     290:	91 05       	cpc	r25, r1
     292:	21 f4       	brne	.+8      	; 0x29c <pinMode+0xf4>
     294:	8a b1       	in	r24, 0x0a	; 10
     296:	8d 7f       	andi	r24, 0xFD	; 253
     298:	8a b9       	out	0x0a, r24	; 10
     29a:	08 95       	ret
     29c:	81 31       	cpi	r24, 0x11	; 17
     29e:	91 05       	cpc	r25, r1
     2a0:	21 f4       	brne	.+8      	; 0x2aa <pinMode+0x102>
     2a2:	8a b1       	in	r24, 0x0a	; 10
     2a4:	8b 7f       	andi	r24, 0xFB	; 251
     2a6:	8a b9       	out	0x0a, r24	; 10
     2a8:	08 95       	ret
     2aa:	82 31       	cpi	r24, 0x12	; 18
     2ac:	91 05       	cpc	r25, r1
     2ae:	21 f4       	brne	.+8      	; 0x2b8 <pinMode+0x110>
     2b0:	8a b1       	in	r24, 0x0a	; 10
     2b2:	87 7f       	andi	r24, 0xF7	; 247
     2b4:	8a b9       	out	0x0a, r24	; 10
     2b6:	08 95       	ret
     2b8:	83 31       	cpi	r24, 0x13	; 19
     2ba:	91 05       	cpc	r25, r1
     2bc:	21 f4       	brne	.+8      	; 0x2c6 <pinMode+0x11e>
     2be:	8a b1       	in	r24, 0x0a	; 10
     2c0:	8f 7e       	andi	r24, 0xEF	; 239
     2c2:	8a b9       	out	0x0a, r24	; 10
     2c4:	08 95       	ret
     2c6:	84 31       	cpi	r24, 0x14	; 20
     2c8:	91 05       	cpc	r25, r1
     2ca:	21 f4       	brne	.+8      	; 0x2d4 <pinMode+0x12c>
     2cc:	8a b1       	in	r24, 0x0a	; 10
     2ce:	8f 7d       	andi	r24, 0xDF	; 223
     2d0:	8a b9       	out	0x0a, r24	; 10
     2d2:	08 95       	ret
     2d4:	85 31       	cpi	r24, 0x15	; 21
     2d6:	91 05       	cpc	r25, r1
     2d8:	21 f4       	brne	.+8      	; 0x2e2 <pinMode+0x13a>
     2da:	8a b1       	in	r24, 0x0a	; 10
     2dc:	8f 7b       	andi	r24, 0xBF	; 191
     2de:	8a b9       	out	0x0a, r24	; 10
     2e0:	08 95       	ret
     2e2:	46 97       	sbiw	r24, 0x16	; 22
     2e4:	09 f0       	breq	.+2      	; 0x2e8 <pinMode+0x140>
     2e6:	a6 c0       	rjmp	.+332    	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
     2e8:	8a b1       	in	r24, 0x0a	; 10
     2ea:	8f 77       	andi	r24, 0x7F	; 127
     2ec:	8a b9       	out	0x0a, r24	; 10
     2ee:	08 95       	ret
     2f0:	61 30       	cpi	r22, 0x01	; 1
     2f2:	71 05       	cpc	r23, r1
     2f4:	09 f0       	breq	.+2      	; 0x2f8 <pinMode+0x150>
     2f6:	9e c0       	rjmp	.+316    	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
     2f8:	00 97       	sbiw	r24, 0x00	; 0
     2fa:	21 f4       	brne	.+8      	; 0x304 <pinMode+0x15c>
     2fc:	84 b1       	in	r24, 0x04	; 4
     2fe:	81 60       	ori	r24, 0x01	; 1
     300:	84 b9       	out	0x04, r24	; 4
     302:	08 95       	ret
     304:	81 30       	cpi	r24, 0x01	; 1
     306:	91 05       	cpc	r25, r1
     308:	21 f4       	brne	.+8      	; 0x312 <pinMode+0x16a>
     30a:	84 b1       	in	r24, 0x04	; 4
     30c:	82 60       	ori	r24, 0x02	; 2
     30e:	84 b9       	out	0x04, r24	; 4
     310:	08 95       	ret
     312:	82 30       	cpi	r24, 0x02	; 2
     314:	91 05       	cpc	r25, r1
     316:	21 f4       	brne	.+8      	; 0x320 <pinMode+0x178>
     318:	84 b1       	in	r24, 0x04	; 4
     31a:	84 60       	ori	r24, 0x04	; 4
     31c:	84 b9       	out	0x04, r24	; 4
     31e:	08 95       	ret
     320:	83 30       	cpi	r24, 0x03	; 3
     322:	91 05       	cpc	r25, r1
     324:	21 f4       	brne	.+8      	; 0x32e <pinMode+0x186>
     326:	84 b1       	in	r24, 0x04	; 4
     328:	88 60       	ori	r24, 0x08	; 8
     32a:	84 b9       	out	0x04, r24	; 4
     32c:	08 95       	ret
     32e:	84 30       	cpi	r24, 0x04	; 4
     330:	91 05       	cpc	r25, r1
     332:	21 f4       	brne	.+8      	; 0x33c <pinMode+0x194>
     334:	84 b1       	in	r24, 0x04	; 4
     336:	80 61       	ori	r24, 0x10	; 16
     338:	84 b9       	out	0x04, r24	; 4
     33a:	08 95       	ret
     33c:	85 30       	cpi	r24, 0x05	; 5
     33e:	91 05       	cpc	r25, r1
     340:	21 f4       	brne	.+8      	; 0x34a <pinMode+0x1a2>
     342:	84 b1       	in	r24, 0x04	; 4
     344:	80 62       	ori	r24, 0x20	; 32
     346:	84 b9       	out	0x04, r24	; 4
     348:	08 95       	ret
     34a:	86 30       	cpi	r24, 0x06	; 6
     34c:	91 05       	cpc	r25, r1
     34e:	21 f4       	brne	.+8      	; 0x358 <pinMode+0x1b0>
     350:	84 b1       	in	r24, 0x04	; 4
     352:	80 64       	ori	r24, 0x40	; 64
     354:	84 b9       	out	0x04, r24	; 4
     356:	08 95       	ret
     358:	87 30       	cpi	r24, 0x07	; 7
     35a:	91 05       	cpc	r25, r1
     35c:	21 f4       	brne	.+8      	; 0x366 <pinMode+0x1be>
     35e:	84 b1       	in	r24, 0x04	; 4
     360:	80 68       	ori	r24, 0x80	; 128
     362:	84 b9       	out	0x04, r24	; 4
     364:	08 95       	ret
     366:	88 30       	cpi	r24, 0x08	; 8
     368:	91 05       	cpc	r25, r1
     36a:	21 f4       	brne	.+8      	; 0x374 <pinMode+0x1cc>
     36c:	87 b1       	in	r24, 0x07	; 7
     36e:	81 60       	ori	r24, 0x01	; 1
     370:	87 b9       	out	0x07, r24	; 7
     372:	08 95       	ret
     374:	89 30       	cpi	r24, 0x09	; 9
     376:	91 05       	cpc	r25, r1
     378:	21 f4       	brne	.+8      	; 0x382 <pinMode+0x1da>
     37a:	87 b1       	in	r24, 0x07	; 7
     37c:	82 60       	ori	r24, 0x02	; 2
     37e:	87 b9       	out	0x07, r24	; 7
     380:	08 95       	ret
     382:	8a 30       	cpi	r24, 0x0A	; 10
     384:	91 05       	cpc	r25, r1
     386:	21 f4       	brne	.+8      	; 0x390 <pinMode+0x1e8>
     388:	87 b1       	in	r24, 0x07	; 7
     38a:	84 60       	ori	r24, 0x04	; 4
     38c:	87 b9       	out	0x07, r24	; 7
     38e:	08 95       	ret
     390:	8b 30       	cpi	r24, 0x0B	; 11
     392:	91 05       	cpc	r25, r1
     394:	21 f4       	brne	.+8      	; 0x39e <pinMode+0x1f6>
     396:	87 b1       	in	r24, 0x07	; 7
     398:	88 60       	ori	r24, 0x08	; 8
     39a:	87 b9       	out	0x07, r24	; 7
     39c:	08 95       	ret
     39e:	8c 30       	cpi	r24, 0x0C	; 12
     3a0:	91 05       	cpc	r25, r1
     3a2:	21 f4       	brne	.+8      	; 0x3ac <pinMode+0x204>
     3a4:	87 b1       	in	r24, 0x07	; 7
     3a6:	80 61       	ori	r24, 0x10	; 16
     3a8:	87 b9       	out	0x07, r24	; 7
     3aa:	08 95       	ret
     3ac:	8d 30       	cpi	r24, 0x0D	; 13
     3ae:	91 05       	cpc	r25, r1
     3b0:	21 f4       	brne	.+8      	; 0x3ba <pinMode+0x212>
     3b2:	87 b1       	in	r24, 0x07	; 7
     3b4:	80 62       	ori	r24, 0x20	; 32
     3b6:	87 b9       	out	0x07, r24	; 7
     3b8:	08 95       	ret
     3ba:	8e 30       	cpi	r24, 0x0E	; 14
     3bc:	91 05       	cpc	r25, r1
     3be:	21 f4       	brne	.+8      	; 0x3c8 <pinMode+0x220>
     3c0:	87 b1       	in	r24, 0x07	; 7
     3c2:	80 64       	ori	r24, 0x40	; 64
     3c4:	87 b9       	out	0x07, r24	; 7
     3c6:	08 95       	ret
     3c8:	8f 30       	cpi	r24, 0x0F	; 15
     3ca:	91 05       	cpc	r25, r1
     3cc:	21 f4       	brne	.+8      	; 0x3d6 <pinMode+0x22e>
     3ce:	8a b1       	in	r24, 0x0a	; 10
     3d0:	81 60       	ori	r24, 0x01	; 1
     3d2:	8a b9       	out	0x0a, r24	; 10
     3d4:	08 95       	ret
     3d6:	80 31       	cpi	r24, 0x10	; 16
     3d8:	91 05       	cpc	r25, r1
     3da:	21 f4       	brne	.+8      	; 0x3e4 <pinMode+0x23c>
     3dc:	8a b1       	in	r24, 0x0a	; 10
     3de:	82 60       	ori	r24, 0x02	; 2
     3e0:	8a b9       	out	0x0a, r24	; 10
     3e2:	08 95       	ret
     3e4:	81 31       	cpi	r24, 0x11	; 17
     3e6:	91 05       	cpc	r25, r1
     3e8:	21 f4       	brne	.+8      	; 0x3f2 <pinMode+0x24a>
     3ea:	8a b1       	in	r24, 0x0a	; 10
     3ec:	84 60       	ori	r24, 0x04	; 4
     3ee:	8a b9       	out	0x0a, r24	; 10
     3f0:	08 95       	ret
     3f2:	82 31       	cpi	r24, 0x12	; 18
     3f4:	91 05       	cpc	r25, r1
     3f6:	21 f4       	brne	.+8      	; 0x400 <__EEPROM_REGION_LENGTH__>
     3f8:	8a b1       	in	r24, 0x0a	; 10
     3fa:	88 60       	ori	r24, 0x08	; 8
     3fc:	8a b9       	out	0x0a, r24	; 10
     3fe:	08 95       	ret
     400:	83 31       	cpi	r24, 0x13	; 19
     402:	91 05       	cpc	r25, r1
     404:	21 f4       	brne	.+8      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
     406:	8a b1       	in	r24, 0x0a	; 10
     408:	80 61       	ori	r24, 0x10	; 16
     40a:	8a b9       	out	0x0a, r24	; 10
     40c:	08 95       	ret
     40e:	84 31       	cpi	r24, 0x14	; 20
     410:	91 05       	cpc	r25, r1
     412:	21 f4       	brne	.+8      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
     414:	8a b1       	in	r24, 0x0a	; 10
     416:	80 62       	ori	r24, 0x20	; 32
     418:	8a b9       	out	0x0a, r24	; 10
     41a:	08 95       	ret
     41c:	85 31       	cpi	r24, 0x15	; 21
     41e:	91 05       	cpc	r25, r1
     420:	21 f4       	brne	.+8      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
     422:	8a b1       	in	r24, 0x0a	; 10
     424:	80 64       	ori	r24, 0x40	; 64
     426:	8a b9       	out	0x0a, r24	; 10
     428:	08 95       	ret
     42a:	46 97       	sbiw	r24, 0x16	; 22
     42c:	19 f4       	brne	.+6      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
     42e:	8a b1       	in	r24, 0x0a	; 10
     430:	80 68       	ori	r24, 0x80	; 128
     432:	8a b9       	out	0x0a, r24	; 10
     434:	08 95       	ret

00000436 <digitalRead>:

}

int digitalRead(int pino){

	if(pino == 0)
     436:	00 97       	sbiw	r24, 0x00	; 0
     438:	29 f4       	brne	.+10     	; 0x444 <digitalRead+0xe>
		return (PINB & (1 << PINB0));
     43a:	83 b1       	in	r24, 0x03	; 3
     43c:	28 2f       	mov	r18, r24
     43e:	21 70       	andi	r18, 0x01	; 1
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	9c c0       	rjmp	.+312    	; 0x57c <digitalRead+0x146>
	else if(pino == 1)
     444:	81 30       	cpi	r24, 0x01	; 1
     446:	91 05       	cpc	r25, r1
     448:	21 f4       	brne	.+8      	; 0x452 <digitalRead+0x1c>
		return (PINB & (1 << PINB1));
     44a:	23 b1       	in	r18, 0x03	; 3
     44c:	22 70       	andi	r18, 0x02	; 2
     44e:	30 e0       	ldi	r19, 0x00	; 0
     450:	95 c0       	rjmp	.+298    	; 0x57c <digitalRead+0x146>
	else if(pino == 2)
     452:	82 30       	cpi	r24, 0x02	; 2
     454:	91 05       	cpc	r25, r1
     456:	21 f4       	brne	.+8      	; 0x460 <digitalRead+0x2a>
		return (PINB & (1 << PINB2));
     458:	23 b1       	in	r18, 0x03	; 3
     45a:	24 70       	andi	r18, 0x04	; 4
     45c:	30 e0       	ldi	r19, 0x00	; 0
     45e:	8e c0       	rjmp	.+284    	; 0x57c <digitalRead+0x146>
	else if(pino == 3)
     460:	83 30       	cpi	r24, 0x03	; 3
     462:	91 05       	cpc	r25, r1
     464:	21 f4       	brne	.+8      	; 0x46e <digitalRead+0x38>
		return (PINB & (1 << PINB3));
     466:	23 b1       	in	r18, 0x03	; 3
     468:	28 70       	andi	r18, 0x08	; 8
     46a:	30 e0       	ldi	r19, 0x00	; 0
     46c:	87 c0       	rjmp	.+270    	; 0x57c <digitalRead+0x146>
	else if(pino == 4)
     46e:	84 30       	cpi	r24, 0x04	; 4
     470:	91 05       	cpc	r25, r1
     472:	21 f4       	brne	.+8      	; 0x47c <digitalRead+0x46>
		return (PINB & (1 << PINB4));
     474:	23 b1       	in	r18, 0x03	; 3
     476:	20 71       	andi	r18, 0x10	; 16
     478:	30 e0       	ldi	r19, 0x00	; 0
     47a:	80 c0       	rjmp	.+256    	; 0x57c <digitalRead+0x146>
	else if(pino == 5)
     47c:	85 30       	cpi	r24, 0x05	; 5
     47e:	91 05       	cpc	r25, r1
     480:	21 f4       	brne	.+8      	; 0x48a <digitalRead+0x54>
		return (PINB & (1 << PINB5));
     482:	23 b1       	in	r18, 0x03	; 3
     484:	20 72       	andi	r18, 0x20	; 32
     486:	30 e0       	ldi	r19, 0x00	; 0
     488:	79 c0       	rjmp	.+242    	; 0x57c <digitalRead+0x146>
	else if(pino == 6)
     48a:	86 30       	cpi	r24, 0x06	; 6
     48c:	91 05       	cpc	r25, r1
     48e:	21 f4       	brne	.+8      	; 0x498 <digitalRead+0x62>
		return (PINB & (1 << PINB6));
     490:	23 b1       	in	r18, 0x03	; 3
     492:	20 74       	andi	r18, 0x40	; 64
     494:	30 e0       	ldi	r19, 0x00	; 0
     496:	72 c0       	rjmp	.+228    	; 0x57c <digitalRead+0x146>
	else if(pino == 7)
     498:	87 30       	cpi	r24, 0x07	; 7
     49a:	91 05       	cpc	r25, r1
     49c:	21 f4       	brne	.+8      	; 0x4a6 <digitalRead+0x70>
		return (PINB & (1 << PINB7));
     49e:	23 b1       	in	r18, 0x03	; 3
     4a0:	20 78       	andi	r18, 0x80	; 128
     4a2:	30 e0       	ldi	r19, 0x00	; 0
     4a4:	6b c0       	rjmp	.+214    	; 0x57c <digitalRead+0x146>
	else if(pino == 8)
     4a6:	88 30       	cpi	r24, 0x08	; 8
     4a8:	91 05       	cpc	r25, r1
     4aa:	29 f4       	brne	.+10     	; 0x4b6 <digitalRead+0x80>
		return (PINC & (1 << PINC0));
     4ac:	86 b1       	in	r24, 0x06	; 6
     4ae:	28 2f       	mov	r18, r24
     4b0:	21 70       	andi	r18, 0x01	; 1
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	63 c0       	rjmp	.+198    	; 0x57c <digitalRead+0x146>
	else if(pino == 9)
     4b6:	89 30       	cpi	r24, 0x09	; 9
     4b8:	91 05       	cpc	r25, r1
     4ba:	21 f4       	brne	.+8      	; 0x4c4 <digitalRead+0x8e>
		return (PINC & (1 << PINC1));
     4bc:	26 b1       	in	r18, 0x06	; 6
     4be:	22 70       	andi	r18, 0x02	; 2
     4c0:	30 e0       	ldi	r19, 0x00	; 0
     4c2:	5c c0       	rjmp	.+184    	; 0x57c <digitalRead+0x146>
	else if(pino == 10)
     4c4:	8a 30       	cpi	r24, 0x0A	; 10
     4c6:	91 05       	cpc	r25, r1
     4c8:	21 f4       	brne	.+8      	; 0x4d2 <digitalRead+0x9c>
		return (PINC & (1 << PINC2));
     4ca:	26 b1       	in	r18, 0x06	; 6
     4cc:	24 70       	andi	r18, 0x04	; 4
     4ce:	30 e0       	ldi	r19, 0x00	; 0
     4d0:	55 c0       	rjmp	.+170    	; 0x57c <digitalRead+0x146>
	else if(pino == 11)
     4d2:	8b 30       	cpi	r24, 0x0B	; 11
     4d4:	91 05       	cpc	r25, r1
     4d6:	21 f4       	brne	.+8      	; 0x4e0 <digitalRead+0xaa>
		return (PINC & (1 << PINC3));
     4d8:	26 b1       	in	r18, 0x06	; 6
     4da:	28 70       	andi	r18, 0x08	; 8
     4dc:	30 e0       	ldi	r19, 0x00	; 0
     4de:	4e c0       	rjmp	.+156    	; 0x57c <digitalRead+0x146>
	else if(pino == 12)
     4e0:	8c 30       	cpi	r24, 0x0C	; 12
     4e2:	91 05       	cpc	r25, r1
     4e4:	21 f4       	brne	.+8      	; 0x4ee <digitalRead+0xb8>
		return (PINC & (1 << PINC4));
     4e6:	26 b1       	in	r18, 0x06	; 6
     4e8:	20 71       	andi	r18, 0x10	; 16
     4ea:	30 e0       	ldi	r19, 0x00	; 0
     4ec:	47 c0       	rjmp	.+142    	; 0x57c <digitalRead+0x146>
	else if(pino == 13)
     4ee:	8d 30       	cpi	r24, 0x0D	; 13
     4f0:	91 05       	cpc	r25, r1
     4f2:	21 f4       	brne	.+8      	; 0x4fc <digitalRead+0xc6>
		return (PINC & (1 << PINC5));
     4f4:	26 b1       	in	r18, 0x06	; 6
     4f6:	20 72       	andi	r18, 0x20	; 32
     4f8:	30 e0       	ldi	r19, 0x00	; 0
     4fa:	40 c0       	rjmp	.+128    	; 0x57c <digitalRead+0x146>
	else if(pino == 14)
     4fc:	8e 30       	cpi	r24, 0x0E	; 14
     4fe:	91 05       	cpc	r25, r1
     500:	21 f4       	brne	.+8      	; 0x50a <digitalRead+0xd4>
		return (PINC & (1 << PINC6));
     502:	26 b1       	in	r18, 0x06	; 6
     504:	20 74       	andi	r18, 0x40	; 64
     506:	30 e0       	ldi	r19, 0x00	; 0
     508:	39 c0       	rjmp	.+114    	; 0x57c <digitalRead+0x146>
	else if(pino == 15)
     50a:	8f 30       	cpi	r24, 0x0F	; 15
     50c:	91 05       	cpc	r25, r1
     50e:	29 f4       	brne	.+10     	; 0x51a <digitalRead+0xe4>
		return (PIND & (1 << PIND0));
     510:	89 b1       	in	r24, 0x09	; 9
     512:	28 2f       	mov	r18, r24
     514:	21 70       	andi	r18, 0x01	; 1
     516:	30 e0       	ldi	r19, 0x00	; 0
     518:	31 c0       	rjmp	.+98     	; 0x57c <digitalRead+0x146>
	else if(pino == 16)
     51a:	80 31       	cpi	r24, 0x10	; 16
     51c:	91 05       	cpc	r25, r1
     51e:	21 f4       	brne	.+8      	; 0x528 <digitalRead+0xf2>
		return (PIND & (1 << PIND1));
     520:	29 b1       	in	r18, 0x09	; 9
     522:	22 70       	andi	r18, 0x02	; 2
     524:	30 e0       	ldi	r19, 0x00	; 0
     526:	2a c0       	rjmp	.+84     	; 0x57c <digitalRead+0x146>
	else if(pino == 17)
     528:	81 31       	cpi	r24, 0x11	; 17
     52a:	91 05       	cpc	r25, r1
     52c:	21 f4       	brne	.+8      	; 0x536 <digitalRead+0x100>
		return (PIND & (1 << PIND2));
     52e:	29 b1       	in	r18, 0x09	; 9
     530:	24 70       	andi	r18, 0x04	; 4
     532:	30 e0       	ldi	r19, 0x00	; 0
     534:	23 c0       	rjmp	.+70     	; 0x57c <digitalRead+0x146>
	else if(pino == 18)
     536:	82 31       	cpi	r24, 0x12	; 18
     538:	91 05       	cpc	r25, r1
     53a:	21 f4       	brne	.+8      	; 0x544 <digitalRead+0x10e>
		return (PIND & (1 << PIND3));
     53c:	29 b1       	in	r18, 0x09	; 9
     53e:	28 70       	andi	r18, 0x08	; 8
     540:	30 e0       	ldi	r19, 0x00	; 0
     542:	1c c0       	rjmp	.+56     	; 0x57c <digitalRead+0x146>
	else if(pino == 19)
     544:	83 31       	cpi	r24, 0x13	; 19
     546:	91 05       	cpc	r25, r1
     548:	21 f4       	brne	.+8      	; 0x552 <digitalRead+0x11c>
		return (PIND & (1 << PIND4));
     54a:	29 b1       	in	r18, 0x09	; 9
     54c:	20 71       	andi	r18, 0x10	; 16
     54e:	30 e0       	ldi	r19, 0x00	; 0
     550:	15 c0       	rjmp	.+42     	; 0x57c <digitalRead+0x146>
	else if(pino == 20)
     552:	84 31       	cpi	r24, 0x14	; 20
     554:	91 05       	cpc	r25, r1
     556:	21 f4       	brne	.+8      	; 0x560 <digitalRead+0x12a>
		return (PIND & (1 << PIND5));
     558:	29 b1       	in	r18, 0x09	; 9
     55a:	20 72       	andi	r18, 0x20	; 32
     55c:	30 e0       	ldi	r19, 0x00	; 0
     55e:	0e c0       	rjmp	.+28     	; 0x57c <digitalRead+0x146>
	else if(pino == 21)
     560:	85 31       	cpi	r24, 0x15	; 21
     562:	91 05       	cpc	r25, r1
     564:	21 f4       	brne	.+8      	; 0x56e <digitalRead+0x138>
		return (PIND & (1 << PIND6));
     566:	29 b1       	in	r18, 0x09	; 9
     568:	20 74       	andi	r18, 0x40	; 64
     56a:	30 e0       	ldi	r19, 0x00	; 0
     56c:	07 c0       	rjmp	.+14     	; 0x57c <digitalRead+0x146>
	else if(pino == 22)
     56e:	46 97       	sbiw	r24, 0x16	; 22
     570:	21 f4       	brne	.+8      	; 0x57a <digitalRead+0x144>
		return (PIND & (1 << PIND7));
     572:	29 b1       	in	r18, 0x09	; 9
     574:	20 78       	andi	r18, 0x80	; 128
     576:	30 e0       	ldi	r19, 0x00	; 0
     578:	01 c0       	rjmp	.+2      	; 0x57c <digitalRead+0x146>
     57a:	08 95       	ret
     57c:	82 2f       	mov	r24, r18
     57e:	93 2f       	mov	r25, r19
     580:	08 95       	ret

00000582 <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
     582:	8b b1       	in	r24, 0x0b	; 11
     584:	80 64       	ori	r24, 0x40	; 64
     586:	8b b9       	out	0x0b, r24	; 11
     588:	00 c0       	rjmp	.+0      	; 0x58a <toggle_e+0x8>
     58a:	8b b1       	in	r24, 0x0b	; 11
     58c:	8f 7b       	andi	r24, 0xBF	; 191
     58e:	8b b9       	out	0x0b, r24	; 11
     590:	08 95       	ret

00000592 <lcd_write>:
     592:	cf 93       	push	r28
     594:	df 93       	push	r29
     596:	d8 2f       	mov	r29, r24
     598:	66 23       	and	r22, r22
     59a:	21 f0       	breq	.+8      	; 0x5a4 <lcd_write+0x12>
     59c:	8b b1       	in	r24, 0x0b	; 11
     59e:	80 61       	ori	r24, 0x10	; 16
     5a0:	8b b9       	out	0x0b, r24	; 11
     5a2:	03 c0       	rjmp	.+6      	; 0x5aa <lcd_write+0x18>
     5a4:	8b b1       	in	r24, 0x0b	; 11
     5a6:	8f 7e       	andi	r24, 0xEF	; 239
     5a8:	8b b9       	out	0x0b, r24	; 11
     5aa:	8b b1       	in	r24, 0x0b	; 11
     5ac:	8f 7d       	andi	r24, 0xDF	; 223
     5ae:	8b b9       	out	0x0b, r24	; 11
     5b0:	8a b1       	in	r24, 0x0a	; 10
     5b2:	8f 60       	ori	r24, 0x0F	; 15
     5b4:	8a b9       	out	0x0a, r24	; 10
     5b6:	cb b1       	in	r28, 0x0b	; 11
     5b8:	c0 7f       	andi	r28, 0xF0	; 240
     5ba:	8d 2f       	mov	r24, r29
     5bc:	82 95       	swap	r24
     5be:	8f 70       	andi	r24, 0x0F	; 15
     5c0:	8c 2b       	or	r24, r28
     5c2:	8b b9       	out	0x0b, r24	; 11
     5c4:	0e 94 c1 02 	call	0x582	; 0x582 <toggle_e>
     5c8:	df 70       	andi	r29, 0x0F	; 15
     5ca:	dc 2b       	or	r29, r28
     5cc:	db b9       	out	0x0b, r29	; 11
     5ce:	0e 94 c1 02 	call	0x582	; 0x582 <toggle_e>
     5d2:	cf 60       	ori	r28, 0x0F	; 15
     5d4:	cb b9       	out	0x0b, r28	; 11
     5d6:	df 91       	pop	r29
     5d8:	cf 91       	pop	r28
     5da:	08 95       	ret

000005dc <lcd_read>:
     5dc:	88 23       	and	r24, r24
     5de:	21 f0       	breq	.+8      	; 0x5e8 <lcd_read+0xc>
     5e0:	8b b1       	in	r24, 0x0b	; 11
     5e2:	80 61       	ori	r24, 0x10	; 16
     5e4:	8b b9       	out	0x0b, r24	; 11
     5e6:	03 c0       	rjmp	.+6      	; 0x5ee <lcd_read+0x12>
     5e8:	8b b1       	in	r24, 0x0b	; 11
     5ea:	8f 7e       	andi	r24, 0xEF	; 239
     5ec:	8b b9       	out	0x0b, r24	; 11
     5ee:	8b b1       	in	r24, 0x0b	; 11
     5f0:	80 62       	ori	r24, 0x20	; 32
     5f2:	8b b9       	out	0x0b, r24	; 11
     5f4:	8a b1       	in	r24, 0x0a	; 10
     5f6:	80 7f       	andi	r24, 0xF0	; 240
     5f8:	8a b9       	out	0x0a, r24	; 10
     5fa:	8b b1       	in	r24, 0x0b	; 11
     5fc:	80 64       	ori	r24, 0x40	; 64
     5fe:	8b b9       	out	0x0b, r24	; 11
     600:	00 c0       	rjmp	.+0      	; 0x602 <lcd_read+0x26>
     602:	99 b1       	in	r25, 0x09	; 9
     604:	92 95       	swap	r25
     606:	90 7f       	andi	r25, 0xF0	; 240
     608:	8b b1       	in	r24, 0x0b	; 11
     60a:	8f 7b       	andi	r24, 0xBF	; 191
     60c:	8b b9       	out	0x0b, r24	; 11
     60e:	00 c0       	rjmp	.+0      	; 0x610 <lcd_read+0x34>
     610:	8b b1       	in	r24, 0x0b	; 11
     612:	80 64       	ori	r24, 0x40	; 64
     614:	8b b9       	out	0x0b, r24	; 11
     616:	00 c0       	rjmp	.+0      	; 0x618 <lcd_read+0x3c>
     618:	89 b1       	in	r24, 0x09	; 9
     61a:	8f 70       	andi	r24, 0x0F	; 15
     61c:	2b b1       	in	r18, 0x0b	; 11
     61e:	2f 7b       	andi	r18, 0xBF	; 191
     620:	2b b9       	out	0x0b, r18	; 11
     622:	89 2b       	or	r24, r25
     624:	08 95       	ret

00000626 <lcd_waitbusy>:
     626:	80 e0       	ldi	r24, 0x00	; 0
     628:	0e 94 ee 02 	call	0x5dc	; 0x5dc <lcd_read>
     62c:	88 23       	and	r24, r24
     62e:	dc f3       	brlt	.-10     	; 0x626 <lcd_waitbusy>
     630:	85 e0       	ldi	r24, 0x05	; 5
     632:	8a 95       	dec	r24
     634:	f1 f7       	brne	.-4      	; 0x632 <lcd_waitbusy+0xc>
     636:	00 00       	nop
     638:	80 e0       	ldi	r24, 0x00	; 0
     63a:	0e 94 ee 02 	call	0x5dc	; 0x5dc <lcd_read>
     63e:	08 95       	ret

00000640 <lcd_command>:
     640:	cf 93       	push	r28
     642:	c8 2f       	mov	r28, r24
     644:	0e 94 13 03 	call	0x626	; 0x626 <lcd_waitbusy>
     648:	60 e0       	ldi	r22, 0x00	; 0
     64a:	8c 2f       	mov	r24, r28
     64c:	0e 94 c9 02 	call	0x592	; 0x592 <lcd_write>
     650:	cf 91       	pop	r28
     652:	08 95       	ret

00000654 <lcd_gotoxy>:
     654:	61 11       	cpse	r22, r1
     656:	04 c0       	rjmp	.+8      	; 0x660 <lcd_gotoxy+0xc>
     658:	80 58       	subi	r24, 0x80	; 128
     65a:	0e 94 20 03 	call	0x640	; 0x640 <lcd_command>
     65e:	08 95       	ret
     660:	80 54       	subi	r24, 0x40	; 64
     662:	0e 94 20 03 	call	0x640	; 0x640 <lcd_command>
     666:	08 95       	ret

00000668 <lcd_clrscr>:
     668:	81 e0       	ldi	r24, 0x01	; 1
     66a:	0e 94 20 03 	call	0x640	; 0x640 <lcd_command>
     66e:	08 95       	ret

00000670 <lcd_putc>:
     670:	cf 93       	push	r28
     672:	c8 2f       	mov	r28, r24
     674:	0e 94 13 03 	call	0x626	; 0x626 <lcd_waitbusy>
     678:	ca 30       	cpi	r28, 0x0A	; 10
     67a:	49 f4       	brne	.+18     	; 0x68e <lcd_putc+0x1e>
     67c:	80 34       	cpi	r24, 0x40	; 64
     67e:	10 f4       	brcc	.+4      	; 0x684 <lcd_putc+0x14>
     680:	80 e4       	ldi	r24, 0x40	; 64
     682:	01 c0       	rjmp	.+2      	; 0x686 <lcd_putc+0x16>
     684:	80 e0       	ldi	r24, 0x00	; 0
     686:	80 58       	subi	r24, 0x80	; 128
     688:	0e 94 20 03 	call	0x640	; 0x640 <lcd_command>
     68c:	04 c0       	rjmp	.+8      	; 0x696 <lcd_putc+0x26>
     68e:	61 e0       	ldi	r22, 0x01	; 1
     690:	8c 2f       	mov	r24, r28
     692:	0e 94 c9 02 	call	0x592	; 0x592 <lcd_write>
     696:	cf 91       	pop	r28
     698:	08 95       	ret

0000069a <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     69a:	cf 93       	push	r28
     69c:	c8 2f       	mov	r28, r24
      && ( &LCD_RS_PORT == &LCD_DATA0_PORT) && ( &LCD_RW_PORT == &LCD_DATA0_PORT) && (&LCD_E_PORT == &LCD_DATA0_PORT)
      && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) 
      && (LCD_RS_PIN == 4 ) && (LCD_RW_PIN == 5) && (LCD_E_PIN == 6 ) )
    {
        /* configure all port bits as output (all LCD lines on same port) */
        DDR(LCD_DATA0_PORT) |= 0x7F;
     69e:	8a b1       	in	r24, 0x0a	; 10
     6a0:	8f 67       	ori	r24, 0x7F	; 127
     6a2:	8a b9       	out	0x0a, r24	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6a4:	8f ef       	ldi	r24, 0xFF	; 255
     6a6:	9c e7       	ldi	r25, 0x7C	; 124
     6a8:	01 97       	sbiw	r24, 0x01	; 1
     6aa:	f1 f7       	brne	.-4      	; 0x6a8 <lcd_init+0xe>
     6ac:	00 c0       	rjmp	.+0      	; 0x6ae <lcd_init+0x14>
     6ae:	00 00       	nop
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    _delay_us(16000);        /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);  // _BV(LCD_FUNCTION)>>4;
     6b0:	8b b1       	in	r24, 0x0b	; 11
     6b2:	82 60       	ori	r24, 0x02	; 2
     6b4:	8b b9       	out	0x0b, r24	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
     6b6:	8b b1       	in	r24, 0x0b	; 11
     6b8:	81 60       	ori	r24, 0x01	; 1
     6ba:	8b b9       	out	0x0b, r24	; 11
    lcd_e_toggle();
     6bc:	0e 94 c1 02 	call	0x582	; 0x582 <toggle_e>
     6c0:	8f ef       	ldi	r24, 0xFF	; 255
     6c2:	96 e2       	ldi	r25, 0x26	; 38
     6c4:	01 97       	sbiw	r24, 0x01	; 1
     6c6:	f1 f7       	brne	.-4      	; 0x6c4 <lcd_init+0x2a>
     6c8:	00 c0       	rjmp	.+0      	; 0x6ca <lcd_init+0x30>
     6ca:	00 00       	nop
    _delay_us(4992);         /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
     6cc:	0e 94 c1 02 	call	0x582	; 0x582 <toggle_e>
     6d0:	9a ea       	ldi	r25, 0xAA	; 170
     6d2:	9a 95       	dec	r25
     6d4:	f1 f7       	brne	.-4      	; 0x6d2 <lcd_init+0x38>
     6d6:	00 c0       	rjmp	.+0      	; 0x6d8 <lcd_init+0x3e>
    _delay_us(64);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
     6d8:	0e 94 c1 02 	call	0x582	; 0x582 <toggle_e>
     6dc:	8a ea       	ldi	r24, 0xAA	; 170
     6de:	8a 95       	dec	r24
     6e0:	f1 f7       	brne	.-4      	; 0x6de <lcd_init+0x44>
     6e2:	00 c0       	rjmp	.+0      	; 0x6e4 <lcd_init+0x4a>
    _delay_us(64);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     6e4:	8b b1       	in	r24, 0x0b	; 11
     6e6:	8e 7f       	andi	r24, 0xFE	; 254
     6e8:	8b b9       	out	0x0b, r24	; 11
    lcd_e_toggle();
     6ea:	0e 94 c1 02 	call	0x582	; 0x582 <toggle_e>
     6ee:	9a ea       	ldi	r25, 0xAA	; 170
     6f0:	9a 95       	dec	r25
     6f2:	f1 f7       	brne	.-4      	; 0x6f0 <lcd_init+0x56>
     6f4:	00 c0       	rjmp	.+0      	; 0x6f6 <lcd_init+0x5c>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     6f6:	88 e2       	ldi	r24, 0x28	; 40
     6f8:	0e 94 20 03 	call	0x640	; 0x640 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     6fc:	88 e0       	ldi	r24, 0x08	; 8
     6fe:	0e 94 20 03 	call	0x640	; 0x640 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
     702:	0e 94 34 03 	call	0x668	; 0x668 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     706:	86 e0       	ldi	r24, 0x06	; 6
     708:	0e 94 20 03 	call	0x640	; 0x640 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
     70c:	8c 2f       	mov	r24, r28
     70e:	0e 94 20 03 	call	0x640	; 0x640 <lcd_command>

}/* lcd_init */
     712:	cf 91       	pop	r28
     714:	08 95       	ret

00000716 <outlcd>:

int   outlcd(char c, FILE *stream);
FILE mystdout = FDEV_SETUP_STREAM(outlcd, NULL, _FDEV_SETUP_WRITE);

int outlcd(char c, FILE *stream){
	lcd_putc(c);
     716:	0e 94 38 03 	call	0x670	; 0x670 <lcd_putc>
	return 0;
}
     71a:	80 e0       	ldi	r24, 0x00	; 0
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	08 95       	ret

00000720 <main>:

int main(void)
{
	uint8_t offset,end, dado;

	eeprom_write_byte (0x00, 0x00);
     720:	60 e0       	ldi	r22, 0x00	; 0
     722:	80 e0       	ldi	r24, 0x00	; 0
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	0e 94 d7 09 	call	0x13ae	; 0x13ae <eeprom_write_byte>
	eeprom_write_byte (0x01, 0x01);
     72a:	61 e0       	ldi	r22, 0x01	; 1
     72c:	81 e0       	ldi	r24, 0x01	; 1
     72e:	90 e0       	ldi	r25, 0x00	; 0
     730:	0e 94 d7 09 	call	0x13ae	; 0x13ae <eeprom_write_byte>
	eeprom_write_byte (0x02, 0x02);
     734:	62 e0       	ldi	r22, 0x02	; 2
     736:	82 e0       	ldi	r24, 0x02	; 2
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	0e 94 d7 09 	call	0x13ae	; 0x13ae <eeprom_write_byte>
	eeprom_write_byte (0x03, 0x03);
     73e:	63 e0       	ldi	r22, 0x03	; 3
     740:	83 e0       	ldi	r24, 0x03	; 3
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	0e 94 d7 09 	call	0x13ae	; 0x13ae <eeprom_write_byte>
	eeprom_write_byte (0x07, 0xFA);
     748:	6a ef       	ldi	r22, 0xFA	; 250
     74a:	87 e0       	ldi	r24, 0x07	; 7
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	0e 94 d7 09 	call	0x13ae	; 0x13ae <eeprom_write_byte>
	eeprom_write_byte (0x0A, 0x03);
     752:	63 e0       	ldi	r22, 0x03	; 3
     754:	8a e0       	ldi	r24, 0x0A	; 10
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	0e 94 d7 09 	call	0x13ae	; 0x13ae <eeprom_write_byte>
	eeprom_write_byte (0x0B, 0x07);
     75c:	67 e0       	ldi	r22, 0x07	; 7
     75e:	8b e0       	ldi	r24, 0x0B	; 11
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	0e 94 d7 09 	call	0x13ae	; 0x13ae <eeprom_write_byte>
	eeprom_write_byte (0x0C, 0x76);
     766:	66 e7       	ldi	r22, 0x76	; 118
     768:	8c e0       	ldi	r24, 0x0C	; 12
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	0e 94 d7 09 	call	0x13ae	; 0x13ae <eeprom_write_byte>

	pinMode(_PC0, INPUT);
     770:	60 e0       	ldi	r22, 0x00	; 0
     772:	70 e0       	ldi	r23, 0x00	; 0
     774:	88 e0       	ldi	r24, 0x08	; 8
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <pinMode>
	pinMode(_PB1, INPUT);
     77c:	60 e0       	ldi	r22, 0x00	; 0
     77e:	70 e0       	ldi	r23, 0x00	; 0
     780:	81 e0       	ldi	r24, 0x01	; 1
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <pinMode>

	lcd_init(LCD_DISP_ON);
     788:	8c e0       	ldi	r24, 0x0C	; 12
     78a:	0e 94 4d 03 	call	0x69a	; 0x69a <lcd_init>
	stdout = &mystdout;
     78e:	80 e0       	ldi	r24, 0x00	; 0
     790:	91 e0       	ldi	r25, 0x01	; 1
     792:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__data_end+0x3>
     796:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end+0x2>

	offset=0;
	dado = eeprom_read_byte(end+offset);
     79a:	10 e0       	ldi	r17, 0x00	; 0
     79c:	c1 2f       	mov	r28, r17
     79e:	d0 e0       	ldi	r29, 0x00	; 0
     7a0:	ce 01       	movw	r24, r28
     7a2:	0e 94 cf 09 	call	0x139e	; 0x139e <eeprom_read_byte>
	printf("%02Xh=%02Xh", end+offset, dado);
     7a6:	1f 92       	push	r1
     7a8:	8f 93       	push	r24
     7aa:	1f 92       	push	r1
     7ac:	1f 93       	push	r17
     7ae:	8f e0       	ldi	r24, 0x0F	; 15
     7b0:	91 e0       	ldi	r25, 0x01	; 1
     7b2:	9f 93       	push	r25
     7b4:	8f 93       	push	r24
     7b6:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <printf>
	
	offset++;
	dado = eeprom_read_byte(end+offset);
     7ba:	21 96       	adiw	r28, 0x01	; 1
     7bc:	ce 01       	movw	r24, r28
     7be:	0e 94 cf 09 	call	0x139e	; 0x139e <eeprom_read_byte>
	printf("\n%02Xh=%02Xh", end+offset, dado);
     7c2:	1f 92       	push	r1
     7c4:	8f 93       	push	r24
     7c6:	df 93       	push	r29
     7c8:	cf 93       	push	r28
     7ca:	8e e0       	ldi	r24, 0x0E	; 14
     7cc:	91 e0       	ldi	r25, 0x01	; 1
     7ce:	9f 93       	push	r25
     7d0:	8f 93       	push	r24
     7d2:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <printf>
     7d6:	8d b7       	in	r24, 0x3d	; 61
     7d8:	9e b7       	in	r25, 0x3e	; 62
     7da:	0c 96       	adiw	r24, 0x0c	; 12
     7dc:	0f b6       	in	r0, 0x3f	; 63
     7de:	f8 94       	cli
     7e0:	9e bf       	out	0x3e, r25	; 62
     7e2:	0f be       	out	0x3f, r0	; 63
     7e4:	8d bf       	out	0x3d, r24	; 61

	offset=0;
	dado = eeprom_read_byte(end+offset);
	printf("%02Xh=%02Xh", end+offset, dado);
	
	offset++;
     7e6:	c1 e0       	ldi	r28, 0x01	; 1
	dado = eeprom_read_byte(end+offset);
	printf("\n%02Xh=%02Xh", end+offset, dado);
	
	while(1)
	{
		if(!digitalRead(_PC0)){
     7e8:	88 e0       	ldi	r24, 0x08	; 8
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	0e 94 1b 02 	call	0x436	; 0x436 <digitalRead>
     7f0:	89 2b       	or	r24, r25
     7f2:	09 f0       	breq	.+2      	; 0x7f6 <main+0xd6>
     7f4:	3f c0       	rjmp	.+126    	; 0x874 <__DATA_REGION_LENGTH__+0x74>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7f6:	9f ef       	ldi	r25, 0xFF	; 255
     7f8:	24 e3       	ldi	r18, 0x34	; 52
     7fa:	8c e0       	ldi	r24, 0x0C	; 12
     7fc:	91 50       	subi	r25, 0x01	; 1
     7fe:	20 40       	sbci	r18, 0x00	; 0
     800:	80 40       	sbci	r24, 0x00	; 0
     802:	e1 f7       	brne	.-8      	; 0x7fc <main+0xdc>
     804:	00 c0       	rjmp	.+0      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     806:	00 00       	nop

			_delay_ms(500);
			do{				
			}while(!digitalRead(_PC0));
     808:	88 e0       	ldi	r24, 0x08	; 8
     80a:	90 e0       	ldi	r25, 0x00	; 0
     80c:	0e 94 1b 02 	call	0x436	; 0x436 <digitalRead>
     810:	89 2b       	or	r24, r25
     812:	d1 f3       	breq	.-12     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
			
			dado = eeprom_read_byte(end+offset);
     814:	0c 2f       	mov	r16, r28
     816:	10 e0       	ldi	r17, 0x00	; 0
     818:	c8 01       	movw	r24, r16
     81a:	0e 94 cf 09 	call	0x139e	; 0x139e <eeprom_read_byte>
     81e:	d8 2f       	mov	r29, r24
			lcd_gotoxy(0, 0);
     820:	60 e0       	ldi	r22, 0x00	; 0
     822:	80 e0       	ldi	r24, 0x00	; 0
     824:	0e 94 2a 03 	call	0x654	; 0x654 <lcd_gotoxy>
			printf("%02Xh=%02Xh", end+offset, dado);
     828:	1f 92       	push	r1
     82a:	df 93       	push	r29
     82c:	1f 93       	push	r17
     82e:	cf 93       	push	r28
     830:	0f e0       	ldi	r16, 0x0F	; 15
     832:	11 e0       	ldi	r17, 0x01	; 1
     834:	1f 93       	push	r17
     836:	0f 93       	push	r16
     838:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <printf>
	
			offset++;
     83c:	cf 5f       	subi	r28, 0xFF	; 255
			dado = eeprom_read_byte(end+offset);
     83e:	ec 2e       	mov	r14, r28
     840:	f1 2c       	mov	r15, r1
     842:	c7 01       	movw	r24, r14
     844:	0e 94 cf 09 	call	0x139e	; 0x139e <eeprom_read_byte>
     848:	d8 2f       	mov	r29, r24
			lcd_gotoxy(0, 1);
     84a:	61 e0       	ldi	r22, 0x01	; 1
     84c:	80 e0       	ldi	r24, 0x00	; 0
     84e:	0e 94 2a 03 	call	0x654	; 0x654 <lcd_gotoxy>
			printf("%02Xh=%02Xh", end+offset, dado);
     852:	1f 92       	push	r1
     854:	df 93       	push	r29
     856:	ff 92       	push	r15
     858:	cf 93       	push	r28
     85a:	1f 93       	push	r17
     85c:	0f 93       	push	r16
     85e:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <printf>
     862:	8d b7       	in	r24, 0x3d	; 61
     864:	9e b7       	in	r25, 0x3e	; 62
     866:	0c 96       	adiw	r24, 0x0c	; 12
     868:	0f b6       	in	r0, 0x3f	; 63
     86a:	f8 94       	cli
     86c:	9e bf       	out	0x3e, r25	; 62
     86e:	0f be       	out	0x3f, r0	; 63
     870:	8d bf       	out	0x3d, r24	; 61
     872:	ba cf       	rjmp	.-140    	; 0x7e8 <main+0xc8>
		}
		else if(!digitalRead(_PC1)){
     874:	89 e0       	ldi	r24, 0x09	; 9
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	0e 94 1b 02 	call	0x436	; 0x436 <digitalRead>
     87c:	89 2b       	or	r24, r25
     87e:	09 f0       	breq	.+2      	; 0x882 <__DATA_REGION_LENGTH__+0x82>
     880:	b3 cf       	rjmp	.-154    	; 0x7e8 <main+0xc8>
     882:	9f ef       	ldi	r25, 0xFF	; 255
     884:	24 e3       	ldi	r18, 0x34	; 52
     886:	8c e0       	ldi	r24, 0x0C	; 12
     888:	91 50       	subi	r25, 0x01	; 1
     88a:	20 40       	sbci	r18, 0x00	; 0
     88c:	80 40       	sbci	r24, 0x00	; 0
     88e:	e1 f7       	brne	.-8      	; 0x888 <__DATA_REGION_LENGTH__+0x88>
     890:	00 c0       	rjmp	.+0      	; 0x892 <__DATA_REGION_LENGTH__+0x92>
     892:	00 00       	nop

			_delay_ms(500);
			offset--;
     894:	ff 24       	eor	r15, r15
     896:	fa 94       	dec	r15
     898:	fc 0e       	add	r15, r28
			offset--;
     89a:	c2 50       	subi	r28, 0x02	; 2
			dado = eeprom_read_byte(end+offset);
     89c:	d0 e0       	ldi	r29, 0x00	; 0
     89e:	ce 01       	movw	r24, r28
     8a0:	0e 94 cf 09 	call	0x139e	; 0x139e <eeprom_read_byte>
     8a4:	18 2f       	mov	r17, r24
			lcd_gotoxy(0, 0);
     8a6:	60 e0       	ldi	r22, 0x00	; 0
     8a8:	80 e0       	ldi	r24, 0x00	; 0
     8aa:	0e 94 2a 03 	call	0x654	; 0x654 <lcd_gotoxy>
			printf("%02Xh=%02Xh", end+offset, dado);
     8ae:	1f 92       	push	r1
     8b0:	1f 93       	push	r17
     8b2:	df 93       	push	r29
     8b4:	cf 93       	push	r28
     8b6:	cf e0       	ldi	r28, 0x0F	; 15
     8b8:	d1 e0       	ldi	r29, 0x01	; 1
     8ba:	df 93       	push	r29
     8bc:	cf 93       	push	r28
     8be:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <printf>
			offset++;
			dado = eeprom_read_byte(end+offset);
     8c2:	0f 2d       	mov	r16, r15
     8c4:	10 e0       	ldi	r17, 0x00	; 0
     8c6:	c8 01       	movw	r24, r16
     8c8:	0e 94 cf 09 	call	0x139e	; 0x139e <eeprom_read_byte>
     8cc:	e8 2e       	mov	r14, r24
			lcd_gotoxy(0, 1);
     8ce:	61 e0       	ldi	r22, 0x01	; 1
     8d0:	80 e0       	ldi	r24, 0x00	; 0
     8d2:	0e 94 2a 03 	call	0x654	; 0x654 <lcd_gotoxy>
			printf("%02Xh=%02Xh", end+offset, dado);
     8d6:	1f 92       	push	r1
     8d8:	ef 92       	push	r14
     8da:	1f 93       	push	r17
     8dc:	ff 92       	push	r15
     8de:	df 93       	push	r29
     8e0:	cf 93       	push	r28
     8e2:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <printf>
     8e6:	8d b7       	in	r24, 0x3d	; 61
     8e8:	9e b7       	in	r25, 0x3e	; 62
     8ea:	0c 96       	adiw	r24, 0x0c	; 12
     8ec:	0f b6       	in	r0, 0x3f	; 63
     8ee:	f8 94       	cli
     8f0:	9e bf       	out	0x3e, r25	; 62
     8f2:	0f be       	out	0x3f, r0	; 63
     8f4:	8d bf       	out	0x3d, r24	; 61
			offset--;
			offset--;
			dado = eeprom_read_byte(end+offset);
			lcd_gotoxy(0, 0);
			printf("%02Xh=%02Xh", end+offset, dado);
			offset++;
     8f6:	cf 2d       	mov	r28, r15
     8f8:	77 cf       	rjmp	.-274    	; 0x7e8 <main+0xc8>

000008fa <vfprintf>:
     8fa:	a0 e1       	ldi	r26, 0x10	; 16
     8fc:	b0 e0       	ldi	r27, 0x00	; 0
     8fe:	e3 e8       	ldi	r30, 0x83	; 131
     900:	f4 e0       	ldi	r31, 0x04	; 4
     902:	0c 94 fa 07 	jmp	0xff4	; 0xff4 <__prologue_saves__>
     906:	7c 01       	movw	r14, r24
     908:	1b 01       	movw	r2, r22
     90a:	6a 01       	movw	r12, r20
     90c:	fc 01       	movw	r30, r24
     90e:	17 82       	std	Z+7, r1	; 0x07
     910:	16 82       	std	Z+6, r1	; 0x06
     912:	83 81       	ldd	r24, Z+3	; 0x03
     914:	81 ff       	sbrs	r24, 1
     916:	44 c3       	rjmp	.+1672   	; 0xfa0 <__stack+0x6a1>
     918:	9e 01       	movw	r18, r28
     91a:	2f 5f       	subi	r18, 0xFF	; 255
     91c:	3f 4f       	sbci	r19, 0xFF	; 255
     91e:	39 01       	movw	r6, r18
     920:	f7 01       	movw	r30, r14
     922:	93 81       	ldd	r25, Z+3	; 0x03
     924:	f1 01       	movw	r30, r2
     926:	93 fd       	sbrc	r25, 3
     928:	85 91       	lpm	r24, Z+
     92a:	93 ff       	sbrs	r25, 3
     92c:	81 91       	ld	r24, Z+
     92e:	1f 01       	movw	r2, r30
     930:	88 23       	and	r24, r24
     932:	09 f4       	brne	.+2      	; 0x936 <__stack+0x37>
     934:	31 c3       	rjmp	.+1634   	; 0xf98 <__stack+0x699>
     936:	85 32       	cpi	r24, 0x25	; 37
     938:	39 f4       	brne	.+14     	; 0x948 <__stack+0x49>
     93a:	93 fd       	sbrc	r25, 3
     93c:	85 91       	lpm	r24, Z+
     93e:	93 ff       	sbrs	r25, 3
     940:	81 91       	ld	r24, Z+
     942:	1f 01       	movw	r2, r30
     944:	85 32       	cpi	r24, 0x25	; 37
     946:	39 f4       	brne	.+14     	; 0x956 <__stack+0x57>
     948:	b7 01       	movw	r22, r14
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     950:	56 01       	movw	r10, r12
     952:	65 01       	movw	r12, r10
     954:	e5 cf       	rjmp	.-54     	; 0x920 <__stack+0x21>
     956:	10 e0       	ldi	r17, 0x00	; 0
     958:	51 2c       	mov	r5, r1
     95a:	91 2c       	mov	r9, r1
     95c:	ff e1       	ldi	r31, 0x1F	; 31
     95e:	f9 15       	cp	r31, r9
     960:	d8 f0       	brcs	.+54     	; 0x998 <__stack+0x99>
     962:	8b 32       	cpi	r24, 0x2B	; 43
     964:	79 f0       	breq	.+30     	; 0x984 <__stack+0x85>
     966:	38 f4       	brcc	.+14     	; 0x976 <__stack+0x77>
     968:	80 32       	cpi	r24, 0x20	; 32
     96a:	79 f0       	breq	.+30     	; 0x98a <__stack+0x8b>
     96c:	83 32       	cpi	r24, 0x23	; 35
     96e:	a1 f4       	brne	.+40     	; 0x998 <__stack+0x99>
     970:	f9 2d       	mov	r31, r9
     972:	f0 61       	ori	r31, 0x10	; 16
     974:	2e c0       	rjmp	.+92     	; 0x9d2 <__stack+0xd3>
     976:	8d 32       	cpi	r24, 0x2D	; 45
     978:	61 f0       	breq	.+24     	; 0x992 <__stack+0x93>
     97a:	80 33       	cpi	r24, 0x30	; 48
     97c:	69 f4       	brne	.+26     	; 0x998 <__stack+0x99>
     97e:	29 2d       	mov	r18, r9
     980:	21 60       	ori	r18, 0x01	; 1
     982:	2d c0       	rjmp	.+90     	; 0x9de <__stack+0xdf>
     984:	39 2d       	mov	r19, r9
     986:	32 60       	ori	r19, 0x02	; 2
     988:	93 2e       	mov	r9, r19
     98a:	89 2d       	mov	r24, r9
     98c:	84 60       	ori	r24, 0x04	; 4
     98e:	98 2e       	mov	r9, r24
     990:	2a c0       	rjmp	.+84     	; 0x9e6 <__stack+0xe7>
     992:	e9 2d       	mov	r30, r9
     994:	e8 60       	ori	r30, 0x08	; 8
     996:	15 c0       	rjmp	.+42     	; 0x9c2 <__stack+0xc3>
     998:	97 fc       	sbrc	r9, 7
     99a:	2d c0       	rjmp	.+90     	; 0x9f6 <__stack+0xf7>
     99c:	20 ed       	ldi	r18, 0xD0	; 208
     99e:	28 0f       	add	r18, r24
     9a0:	2a 30       	cpi	r18, 0x0A	; 10
     9a2:	88 f4       	brcc	.+34     	; 0x9c6 <__stack+0xc7>
     9a4:	96 fe       	sbrs	r9, 6
     9a6:	06 c0       	rjmp	.+12     	; 0x9b4 <__stack+0xb5>
     9a8:	3a e0       	ldi	r19, 0x0A	; 10
     9aa:	13 9f       	mul	r17, r19
     9ac:	20 0d       	add	r18, r0
     9ae:	11 24       	eor	r1, r1
     9b0:	12 2f       	mov	r17, r18
     9b2:	19 c0       	rjmp	.+50     	; 0x9e6 <__stack+0xe7>
     9b4:	8a e0       	ldi	r24, 0x0A	; 10
     9b6:	58 9e       	mul	r5, r24
     9b8:	20 0d       	add	r18, r0
     9ba:	11 24       	eor	r1, r1
     9bc:	52 2e       	mov	r5, r18
     9be:	e9 2d       	mov	r30, r9
     9c0:	e0 62       	ori	r30, 0x20	; 32
     9c2:	9e 2e       	mov	r9, r30
     9c4:	10 c0       	rjmp	.+32     	; 0x9e6 <__stack+0xe7>
     9c6:	8e 32       	cpi	r24, 0x2E	; 46
     9c8:	31 f4       	brne	.+12     	; 0x9d6 <__stack+0xd7>
     9ca:	96 fc       	sbrc	r9, 6
     9cc:	e5 c2       	rjmp	.+1482   	; 0xf98 <__stack+0x699>
     9ce:	f9 2d       	mov	r31, r9
     9d0:	f0 64       	ori	r31, 0x40	; 64
     9d2:	9f 2e       	mov	r9, r31
     9d4:	08 c0       	rjmp	.+16     	; 0x9e6 <__stack+0xe7>
     9d6:	8c 36       	cpi	r24, 0x6C	; 108
     9d8:	21 f4       	brne	.+8      	; 0x9e2 <__stack+0xe3>
     9da:	29 2d       	mov	r18, r9
     9dc:	20 68       	ori	r18, 0x80	; 128
     9de:	92 2e       	mov	r9, r18
     9e0:	02 c0       	rjmp	.+4      	; 0x9e6 <__stack+0xe7>
     9e2:	88 36       	cpi	r24, 0x68	; 104
     9e4:	41 f4       	brne	.+16     	; 0x9f6 <__stack+0xf7>
     9e6:	f1 01       	movw	r30, r2
     9e8:	93 fd       	sbrc	r25, 3
     9ea:	85 91       	lpm	r24, Z+
     9ec:	93 ff       	sbrs	r25, 3
     9ee:	81 91       	ld	r24, Z+
     9f0:	1f 01       	movw	r2, r30
     9f2:	81 11       	cpse	r24, r1
     9f4:	b3 cf       	rjmp	.-154    	; 0x95c <__stack+0x5d>
     9f6:	9b eb       	ldi	r25, 0xBB	; 187
     9f8:	98 0f       	add	r25, r24
     9fa:	93 30       	cpi	r25, 0x03	; 3
     9fc:	20 f4       	brcc	.+8      	; 0xa06 <__stack+0x107>
     9fe:	99 2d       	mov	r25, r9
     a00:	90 61       	ori	r25, 0x10	; 16
     a02:	80 5e       	subi	r24, 0xE0	; 224
     a04:	07 c0       	rjmp	.+14     	; 0xa14 <__stack+0x115>
     a06:	9b e9       	ldi	r25, 0x9B	; 155
     a08:	98 0f       	add	r25, r24
     a0a:	93 30       	cpi	r25, 0x03	; 3
     a0c:	08 f0       	brcs	.+2      	; 0xa10 <__stack+0x111>
     a0e:	66 c1       	rjmp	.+716    	; 0xcdc <__stack+0x3dd>
     a10:	99 2d       	mov	r25, r9
     a12:	9f 7e       	andi	r25, 0xEF	; 239
     a14:	96 ff       	sbrs	r25, 6
     a16:	16 e0       	ldi	r17, 0x06	; 6
     a18:	9f 73       	andi	r25, 0x3F	; 63
     a1a:	99 2e       	mov	r9, r25
     a1c:	85 36       	cpi	r24, 0x65	; 101
     a1e:	19 f4       	brne	.+6      	; 0xa26 <__stack+0x127>
     a20:	90 64       	ori	r25, 0x40	; 64
     a22:	99 2e       	mov	r9, r25
     a24:	08 c0       	rjmp	.+16     	; 0xa36 <__stack+0x137>
     a26:	86 36       	cpi	r24, 0x66	; 102
     a28:	21 f4       	brne	.+8      	; 0xa32 <__stack+0x133>
     a2a:	39 2f       	mov	r19, r25
     a2c:	30 68       	ori	r19, 0x80	; 128
     a2e:	93 2e       	mov	r9, r19
     a30:	02 c0       	rjmp	.+4      	; 0xa36 <__stack+0x137>
     a32:	11 11       	cpse	r17, r1
     a34:	11 50       	subi	r17, 0x01	; 1
     a36:	97 fe       	sbrs	r9, 7
     a38:	07 c0       	rjmp	.+14     	; 0xa48 <__stack+0x149>
     a3a:	1c 33       	cpi	r17, 0x3C	; 60
     a3c:	50 f4       	brcc	.+20     	; 0xa52 <__stack+0x153>
     a3e:	44 24       	eor	r4, r4
     a40:	43 94       	inc	r4
     a42:	41 0e       	add	r4, r17
     a44:	27 e0       	ldi	r18, 0x07	; 7
     a46:	0b c0       	rjmp	.+22     	; 0xa5e <__stack+0x15f>
     a48:	18 30       	cpi	r17, 0x08	; 8
     a4a:	38 f0       	brcs	.+14     	; 0xa5a <__stack+0x15b>
     a4c:	27 e0       	ldi	r18, 0x07	; 7
     a4e:	17 e0       	ldi	r17, 0x07	; 7
     a50:	05 c0       	rjmp	.+10     	; 0xa5c <__stack+0x15d>
     a52:	27 e0       	ldi	r18, 0x07	; 7
     a54:	9c e3       	ldi	r25, 0x3C	; 60
     a56:	49 2e       	mov	r4, r25
     a58:	02 c0       	rjmp	.+4      	; 0xa5e <__stack+0x15f>
     a5a:	21 2f       	mov	r18, r17
     a5c:	41 2c       	mov	r4, r1
     a5e:	56 01       	movw	r10, r12
     a60:	84 e0       	ldi	r24, 0x04	; 4
     a62:	a8 0e       	add	r10, r24
     a64:	b1 1c       	adc	r11, r1
     a66:	f6 01       	movw	r30, r12
     a68:	60 81       	ld	r22, Z
     a6a:	71 81       	ldd	r23, Z+1	; 0x01
     a6c:	82 81       	ldd	r24, Z+2	; 0x02
     a6e:	93 81       	ldd	r25, Z+3	; 0x03
     a70:	04 2d       	mov	r16, r4
     a72:	a3 01       	movw	r20, r6
     a74:	0e 94 31 08 	call	0x1062	; 0x1062 <__ftoa_engine>
     a78:	6c 01       	movw	r12, r24
     a7a:	f9 81       	ldd	r31, Y+1	; 0x01
     a7c:	fc 87       	std	Y+12, r31	; 0x0c
     a7e:	f0 ff       	sbrs	r31, 0
     a80:	02 c0       	rjmp	.+4      	; 0xa86 <__stack+0x187>
     a82:	f3 ff       	sbrs	r31, 3
     a84:	06 c0       	rjmp	.+12     	; 0xa92 <__stack+0x193>
     a86:	91 fc       	sbrc	r9, 1
     a88:	06 c0       	rjmp	.+12     	; 0xa96 <__stack+0x197>
     a8a:	92 fe       	sbrs	r9, 2
     a8c:	06 c0       	rjmp	.+12     	; 0xa9a <__stack+0x19b>
     a8e:	00 e2       	ldi	r16, 0x20	; 32
     a90:	05 c0       	rjmp	.+10     	; 0xa9c <__stack+0x19d>
     a92:	0d e2       	ldi	r16, 0x2D	; 45
     a94:	03 c0       	rjmp	.+6      	; 0xa9c <__stack+0x19d>
     a96:	0b e2       	ldi	r16, 0x2B	; 43
     a98:	01 c0       	rjmp	.+2      	; 0xa9c <__stack+0x19d>
     a9a:	00 e0       	ldi	r16, 0x00	; 0
     a9c:	8c 85       	ldd	r24, Y+12	; 0x0c
     a9e:	8c 70       	andi	r24, 0x0C	; 12
     aa0:	19 f0       	breq	.+6      	; 0xaa8 <__stack+0x1a9>
     aa2:	01 11       	cpse	r16, r1
     aa4:	5a c2       	rjmp	.+1204   	; 0xf5a <__stack+0x65b>
     aa6:	9b c2       	rjmp	.+1334   	; 0xfde <__stack+0x6df>
     aa8:	97 fe       	sbrs	r9, 7
     aaa:	10 c0       	rjmp	.+32     	; 0xacc <__stack+0x1cd>
     aac:	4c 0c       	add	r4, r12
     aae:	fc 85       	ldd	r31, Y+12	; 0x0c
     ab0:	f4 ff       	sbrs	r31, 4
     ab2:	04 c0       	rjmp	.+8      	; 0xabc <__stack+0x1bd>
     ab4:	8a 81       	ldd	r24, Y+2	; 0x02
     ab6:	81 33       	cpi	r24, 0x31	; 49
     ab8:	09 f4       	brne	.+2      	; 0xabc <__stack+0x1bd>
     aba:	4a 94       	dec	r4
     abc:	14 14       	cp	r1, r4
     abe:	74 f5       	brge	.+92     	; 0xb1c <__stack+0x21d>
     ac0:	28 e0       	ldi	r18, 0x08	; 8
     ac2:	24 15       	cp	r18, r4
     ac4:	78 f5       	brcc	.+94     	; 0xb24 <__stack+0x225>
     ac6:	88 e0       	ldi	r24, 0x08	; 8
     ac8:	48 2e       	mov	r4, r24
     aca:	2c c0       	rjmp	.+88     	; 0xb24 <__stack+0x225>
     acc:	96 fc       	sbrc	r9, 6
     ace:	2a c0       	rjmp	.+84     	; 0xb24 <__stack+0x225>
     ad0:	81 2f       	mov	r24, r17
     ad2:	90 e0       	ldi	r25, 0x00	; 0
     ad4:	8c 15       	cp	r24, r12
     ad6:	9d 05       	cpc	r25, r13
     ad8:	9c f0       	brlt	.+38     	; 0xb00 <__stack+0x201>
     ada:	3c ef       	ldi	r19, 0xFC	; 252
     adc:	c3 16       	cp	r12, r19
     ade:	3f ef       	ldi	r19, 0xFF	; 255
     ae0:	d3 06       	cpc	r13, r19
     ae2:	74 f0       	brlt	.+28     	; 0xb00 <__stack+0x201>
     ae4:	89 2d       	mov	r24, r9
     ae6:	80 68       	ori	r24, 0x80	; 128
     ae8:	98 2e       	mov	r9, r24
     aea:	0a c0       	rjmp	.+20     	; 0xb00 <__stack+0x201>
     aec:	e2 e0       	ldi	r30, 0x02	; 2
     aee:	f0 e0       	ldi	r31, 0x00	; 0
     af0:	ec 0f       	add	r30, r28
     af2:	fd 1f       	adc	r31, r29
     af4:	e1 0f       	add	r30, r17
     af6:	f1 1d       	adc	r31, r1
     af8:	80 81       	ld	r24, Z
     afa:	80 33       	cpi	r24, 0x30	; 48
     afc:	19 f4       	brne	.+6      	; 0xb04 <__stack+0x205>
     afe:	11 50       	subi	r17, 0x01	; 1
     b00:	11 11       	cpse	r17, r1
     b02:	f4 cf       	rjmp	.-24     	; 0xaec <__stack+0x1ed>
     b04:	97 fe       	sbrs	r9, 7
     b06:	0e c0       	rjmp	.+28     	; 0xb24 <__stack+0x225>
     b08:	44 24       	eor	r4, r4
     b0a:	43 94       	inc	r4
     b0c:	41 0e       	add	r4, r17
     b0e:	81 2f       	mov	r24, r17
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	c8 16       	cp	r12, r24
     b14:	d9 06       	cpc	r13, r25
     b16:	2c f4       	brge	.+10     	; 0xb22 <__stack+0x223>
     b18:	1c 19       	sub	r17, r12
     b1a:	04 c0       	rjmp	.+8      	; 0xb24 <__stack+0x225>
     b1c:	44 24       	eor	r4, r4
     b1e:	43 94       	inc	r4
     b20:	01 c0       	rjmp	.+2      	; 0xb24 <__stack+0x225>
     b22:	10 e0       	ldi	r17, 0x00	; 0
     b24:	97 fe       	sbrs	r9, 7
     b26:	06 c0       	rjmp	.+12     	; 0xb34 <__stack+0x235>
     b28:	1c 14       	cp	r1, r12
     b2a:	1d 04       	cpc	r1, r13
     b2c:	34 f4       	brge	.+12     	; 0xb3a <__stack+0x23b>
     b2e:	c6 01       	movw	r24, r12
     b30:	01 96       	adiw	r24, 0x01	; 1
     b32:	05 c0       	rjmp	.+10     	; 0xb3e <__stack+0x23f>
     b34:	85 e0       	ldi	r24, 0x05	; 5
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	02 c0       	rjmp	.+4      	; 0xb3e <__stack+0x23f>
     b3a:	81 e0       	ldi	r24, 0x01	; 1
     b3c:	90 e0       	ldi	r25, 0x00	; 0
     b3e:	01 11       	cpse	r16, r1
     b40:	01 96       	adiw	r24, 0x01	; 1
     b42:	11 23       	and	r17, r17
     b44:	31 f0       	breq	.+12     	; 0xb52 <__stack+0x253>
     b46:	21 2f       	mov	r18, r17
     b48:	30 e0       	ldi	r19, 0x00	; 0
     b4a:	2f 5f       	subi	r18, 0xFF	; 255
     b4c:	3f 4f       	sbci	r19, 0xFF	; 255
     b4e:	82 0f       	add	r24, r18
     b50:	93 1f       	adc	r25, r19
     b52:	25 2d       	mov	r18, r5
     b54:	30 e0       	ldi	r19, 0x00	; 0
     b56:	82 17       	cp	r24, r18
     b58:	93 07       	cpc	r25, r19
     b5a:	14 f4       	brge	.+4      	; 0xb60 <__stack+0x261>
     b5c:	58 1a       	sub	r5, r24
     b5e:	01 c0       	rjmp	.+2      	; 0xb62 <__stack+0x263>
     b60:	51 2c       	mov	r5, r1
     b62:	89 2d       	mov	r24, r9
     b64:	89 70       	andi	r24, 0x09	; 9
     b66:	49 f4       	brne	.+18     	; 0xb7a <__stack+0x27b>
     b68:	55 20       	and	r5, r5
     b6a:	39 f0       	breq	.+14     	; 0xb7a <__stack+0x27b>
     b6c:	b7 01       	movw	r22, r14
     b6e:	80 e2       	ldi	r24, 0x20	; 32
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     b76:	5a 94       	dec	r5
     b78:	f7 cf       	rjmp	.-18     	; 0xb68 <__stack+0x269>
     b7a:	00 23       	and	r16, r16
     b7c:	29 f0       	breq	.+10     	; 0xb88 <__stack+0x289>
     b7e:	b7 01       	movw	r22, r14
     b80:	80 2f       	mov	r24, r16
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     b88:	93 fc       	sbrc	r9, 3
     b8a:	09 c0       	rjmp	.+18     	; 0xb9e <__stack+0x29f>
     b8c:	55 20       	and	r5, r5
     b8e:	39 f0       	breq	.+14     	; 0xb9e <__stack+0x29f>
     b90:	b7 01       	movw	r22, r14
     b92:	80 e3       	ldi	r24, 0x30	; 48
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     b9a:	5a 94       	dec	r5
     b9c:	f7 cf       	rjmp	.-18     	; 0xb8c <__stack+0x28d>
     b9e:	97 fe       	sbrs	r9, 7
     ba0:	4c c0       	rjmp	.+152    	; 0xc3a <__stack+0x33b>
     ba2:	46 01       	movw	r8, r12
     ba4:	d7 fe       	sbrs	r13, 7
     ba6:	02 c0       	rjmp	.+4      	; 0xbac <__stack+0x2ad>
     ba8:	81 2c       	mov	r8, r1
     baa:	91 2c       	mov	r9, r1
     bac:	c6 01       	movw	r24, r12
     bae:	88 19       	sub	r24, r8
     bb0:	99 09       	sbc	r25, r9
     bb2:	f3 01       	movw	r30, r6
     bb4:	e8 0f       	add	r30, r24
     bb6:	f9 1f       	adc	r31, r25
     bb8:	fe 87       	std	Y+14, r31	; 0x0e
     bba:	ed 87       	std	Y+13, r30	; 0x0d
     bbc:	96 01       	movw	r18, r12
     bbe:	24 19       	sub	r18, r4
     bc0:	31 09       	sbc	r19, r1
     bc2:	38 8b       	std	Y+16, r19	; 0x10
     bc4:	2f 87       	std	Y+15, r18	; 0x0f
     bc6:	01 2f       	mov	r16, r17
     bc8:	10 e0       	ldi	r17, 0x00	; 0
     bca:	11 95       	neg	r17
     bcc:	01 95       	neg	r16
     bce:	11 09       	sbc	r17, r1
     bd0:	3f ef       	ldi	r19, 0xFF	; 255
     bd2:	83 16       	cp	r8, r19
     bd4:	93 06       	cpc	r9, r19
     bd6:	29 f4       	brne	.+10     	; 0xbe2 <__stack+0x2e3>
     bd8:	b7 01       	movw	r22, r14
     bda:	8e e2       	ldi	r24, 0x2E	; 46
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     be2:	c8 14       	cp	r12, r8
     be4:	d9 04       	cpc	r13, r9
     be6:	4c f0       	brlt	.+18     	; 0xbfa <__stack+0x2fb>
     be8:	8f 85       	ldd	r24, Y+15	; 0x0f
     bea:	98 89       	ldd	r25, Y+16	; 0x10
     bec:	88 15       	cp	r24, r8
     bee:	99 05       	cpc	r25, r9
     bf0:	24 f4       	brge	.+8      	; 0xbfa <__stack+0x2fb>
     bf2:	ed 85       	ldd	r30, Y+13	; 0x0d
     bf4:	fe 85       	ldd	r31, Y+14	; 0x0e
     bf6:	81 81       	ldd	r24, Z+1	; 0x01
     bf8:	01 c0       	rjmp	.+2      	; 0xbfc <__stack+0x2fd>
     bfa:	80 e3       	ldi	r24, 0x30	; 48
     bfc:	f1 e0       	ldi	r31, 0x01	; 1
     bfe:	8f 1a       	sub	r8, r31
     c00:	91 08       	sbc	r9, r1
     c02:	2d 85       	ldd	r18, Y+13	; 0x0d
     c04:	3e 85       	ldd	r19, Y+14	; 0x0e
     c06:	2f 5f       	subi	r18, 0xFF	; 255
     c08:	3f 4f       	sbci	r19, 0xFF	; 255
     c0a:	3e 87       	std	Y+14, r19	; 0x0e
     c0c:	2d 87       	std	Y+13, r18	; 0x0d
     c0e:	80 16       	cp	r8, r16
     c10:	91 06       	cpc	r9, r17
     c12:	2c f0       	brlt	.+10     	; 0xc1e <__stack+0x31f>
     c14:	b7 01       	movw	r22, r14
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     c1c:	d9 cf       	rjmp	.-78     	; 0xbd0 <__stack+0x2d1>
     c1e:	c8 14       	cp	r12, r8
     c20:	d9 04       	cpc	r13, r9
     c22:	41 f4       	brne	.+16     	; 0xc34 <__stack+0x335>
     c24:	9a 81       	ldd	r25, Y+2	; 0x02
     c26:	96 33       	cpi	r25, 0x36	; 54
     c28:	20 f4       	brcc	.+8      	; 0xc32 <__stack+0x333>
     c2a:	95 33       	cpi	r25, 0x35	; 53
     c2c:	19 f4       	brne	.+6      	; 0xc34 <__stack+0x335>
     c2e:	3c 85       	ldd	r19, Y+12	; 0x0c
     c30:	34 ff       	sbrs	r19, 4
     c32:	81 e3       	ldi	r24, 0x31	; 49
     c34:	b7 01       	movw	r22, r14
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	4e c0       	rjmp	.+156    	; 0xcd6 <__stack+0x3d7>
     c3a:	8a 81       	ldd	r24, Y+2	; 0x02
     c3c:	81 33       	cpi	r24, 0x31	; 49
     c3e:	19 f0       	breq	.+6      	; 0xc46 <__stack+0x347>
     c40:	9c 85       	ldd	r25, Y+12	; 0x0c
     c42:	9f 7e       	andi	r25, 0xEF	; 239
     c44:	9c 87       	std	Y+12, r25	; 0x0c
     c46:	b7 01       	movw	r22, r14
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     c4e:	11 11       	cpse	r17, r1
     c50:	05 c0       	rjmp	.+10     	; 0xc5c <__stack+0x35d>
     c52:	94 fc       	sbrc	r9, 4
     c54:	18 c0       	rjmp	.+48     	; 0xc86 <__stack+0x387>
     c56:	85 e6       	ldi	r24, 0x65	; 101
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	17 c0       	rjmp	.+46     	; 0xc8a <__stack+0x38b>
     c5c:	b7 01       	movw	r22, r14
     c5e:	8e e2       	ldi	r24, 0x2E	; 46
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     c66:	1e 5f       	subi	r17, 0xFE	; 254
     c68:	82 e0       	ldi	r24, 0x02	; 2
     c6a:	01 e0       	ldi	r16, 0x01	; 1
     c6c:	08 0f       	add	r16, r24
     c6e:	f3 01       	movw	r30, r6
     c70:	e8 0f       	add	r30, r24
     c72:	f1 1d       	adc	r31, r1
     c74:	80 81       	ld	r24, Z
     c76:	b7 01       	movw	r22, r14
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     c7e:	80 2f       	mov	r24, r16
     c80:	01 13       	cpse	r16, r17
     c82:	f3 cf       	rjmp	.-26     	; 0xc6a <__stack+0x36b>
     c84:	e6 cf       	rjmp	.-52     	; 0xc52 <__stack+0x353>
     c86:	85 e4       	ldi	r24, 0x45	; 69
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	b7 01       	movw	r22, r14
     c8c:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     c90:	d7 fc       	sbrc	r13, 7
     c92:	06 c0       	rjmp	.+12     	; 0xca0 <__stack+0x3a1>
     c94:	c1 14       	cp	r12, r1
     c96:	d1 04       	cpc	r13, r1
     c98:	41 f4       	brne	.+16     	; 0xcaa <__stack+0x3ab>
     c9a:	ec 85       	ldd	r30, Y+12	; 0x0c
     c9c:	e4 ff       	sbrs	r30, 4
     c9e:	05 c0       	rjmp	.+10     	; 0xcaa <__stack+0x3ab>
     ca0:	d1 94       	neg	r13
     ca2:	c1 94       	neg	r12
     ca4:	d1 08       	sbc	r13, r1
     ca6:	8d e2       	ldi	r24, 0x2D	; 45
     ca8:	01 c0       	rjmp	.+2      	; 0xcac <__stack+0x3ad>
     caa:	8b e2       	ldi	r24, 0x2B	; 43
     cac:	b7 01       	movw	r22, r14
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     cb4:	80 e3       	ldi	r24, 0x30	; 48
     cb6:	2a e0       	ldi	r18, 0x0A	; 10
     cb8:	c2 16       	cp	r12, r18
     cba:	d1 04       	cpc	r13, r1
     cbc:	2c f0       	brlt	.+10     	; 0xcc8 <__stack+0x3c9>
     cbe:	8f 5f       	subi	r24, 0xFF	; 255
     cc0:	fa e0       	ldi	r31, 0x0A	; 10
     cc2:	cf 1a       	sub	r12, r31
     cc4:	d1 08       	sbc	r13, r1
     cc6:	f7 cf       	rjmp	.-18     	; 0xcb6 <__stack+0x3b7>
     cc8:	b7 01       	movw	r22, r14
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     cd0:	b7 01       	movw	r22, r14
     cd2:	c6 01       	movw	r24, r12
     cd4:	c0 96       	adiw	r24, 0x30	; 48
     cd6:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     cda:	54 c1       	rjmp	.+680    	; 0xf84 <__stack+0x685>
     cdc:	83 36       	cpi	r24, 0x63	; 99
     cde:	31 f0       	breq	.+12     	; 0xcec <__stack+0x3ed>
     ce0:	83 37       	cpi	r24, 0x73	; 115
     ce2:	79 f0       	breq	.+30     	; 0xd02 <__stack+0x403>
     ce4:	83 35       	cpi	r24, 0x53	; 83
     ce6:	09 f0       	breq	.+2      	; 0xcea <__stack+0x3eb>
     ce8:	56 c0       	rjmp	.+172    	; 0xd96 <__stack+0x497>
     cea:	20 c0       	rjmp	.+64     	; 0xd2c <__stack+0x42d>
     cec:	56 01       	movw	r10, r12
     cee:	32 e0       	ldi	r19, 0x02	; 2
     cf0:	a3 0e       	add	r10, r19
     cf2:	b1 1c       	adc	r11, r1
     cf4:	f6 01       	movw	r30, r12
     cf6:	80 81       	ld	r24, Z
     cf8:	89 83       	std	Y+1, r24	; 0x01
     cfa:	01 e0       	ldi	r16, 0x01	; 1
     cfc:	10 e0       	ldi	r17, 0x00	; 0
     cfe:	63 01       	movw	r12, r6
     d00:	12 c0       	rjmp	.+36     	; 0xd26 <__stack+0x427>
     d02:	56 01       	movw	r10, r12
     d04:	f2 e0       	ldi	r31, 0x02	; 2
     d06:	af 0e       	add	r10, r31
     d08:	b1 1c       	adc	r11, r1
     d0a:	f6 01       	movw	r30, r12
     d0c:	c0 80       	ld	r12, Z
     d0e:	d1 80       	ldd	r13, Z+1	; 0x01
     d10:	96 fe       	sbrs	r9, 6
     d12:	03 c0       	rjmp	.+6      	; 0xd1a <__stack+0x41b>
     d14:	61 2f       	mov	r22, r17
     d16:	70 e0       	ldi	r23, 0x00	; 0
     d18:	02 c0       	rjmp	.+4      	; 0xd1e <__stack+0x41f>
     d1a:	6f ef       	ldi	r22, 0xFF	; 255
     d1c:	7f ef       	ldi	r23, 0xFF	; 255
     d1e:	c6 01       	movw	r24, r12
     d20:	0e 94 14 09 	call	0x1228	; 0x1228 <strnlen>
     d24:	8c 01       	movw	r16, r24
     d26:	f9 2d       	mov	r31, r9
     d28:	ff 77       	andi	r31, 0x7F	; 127
     d2a:	14 c0       	rjmp	.+40     	; 0xd54 <__stack+0x455>
     d2c:	56 01       	movw	r10, r12
     d2e:	22 e0       	ldi	r18, 0x02	; 2
     d30:	a2 0e       	add	r10, r18
     d32:	b1 1c       	adc	r11, r1
     d34:	f6 01       	movw	r30, r12
     d36:	c0 80       	ld	r12, Z
     d38:	d1 80       	ldd	r13, Z+1	; 0x01
     d3a:	96 fe       	sbrs	r9, 6
     d3c:	03 c0       	rjmp	.+6      	; 0xd44 <__stack+0x445>
     d3e:	61 2f       	mov	r22, r17
     d40:	70 e0       	ldi	r23, 0x00	; 0
     d42:	02 c0       	rjmp	.+4      	; 0xd48 <__stack+0x449>
     d44:	6f ef       	ldi	r22, 0xFF	; 255
     d46:	7f ef       	ldi	r23, 0xFF	; 255
     d48:	c6 01       	movw	r24, r12
     d4a:	0e 94 09 09 	call	0x1212	; 0x1212 <strnlen_P>
     d4e:	8c 01       	movw	r16, r24
     d50:	f9 2d       	mov	r31, r9
     d52:	f0 68       	ori	r31, 0x80	; 128
     d54:	9f 2e       	mov	r9, r31
     d56:	f3 fd       	sbrc	r31, 3
     d58:	1a c0       	rjmp	.+52     	; 0xd8e <__stack+0x48f>
     d5a:	85 2d       	mov	r24, r5
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	08 17       	cp	r16, r24
     d60:	19 07       	cpc	r17, r25
     d62:	a8 f4       	brcc	.+42     	; 0xd8e <__stack+0x48f>
     d64:	b7 01       	movw	r22, r14
     d66:	80 e2       	ldi	r24, 0x20	; 32
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     d6e:	5a 94       	dec	r5
     d70:	f4 cf       	rjmp	.-24     	; 0xd5a <__stack+0x45b>
     d72:	f6 01       	movw	r30, r12
     d74:	97 fc       	sbrc	r9, 7
     d76:	85 91       	lpm	r24, Z+
     d78:	97 fe       	sbrs	r9, 7
     d7a:	81 91       	ld	r24, Z+
     d7c:	6f 01       	movw	r12, r30
     d7e:	b7 01       	movw	r22, r14
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     d86:	51 10       	cpse	r5, r1
     d88:	5a 94       	dec	r5
     d8a:	01 50       	subi	r16, 0x01	; 1
     d8c:	11 09       	sbc	r17, r1
     d8e:	01 15       	cp	r16, r1
     d90:	11 05       	cpc	r17, r1
     d92:	79 f7       	brne	.-34     	; 0xd72 <__stack+0x473>
     d94:	f7 c0       	rjmp	.+494    	; 0xf84 <__stack+0x685>
     d96:	84 36       	cpi	r24, 0x64	; 100
     d98:	11 f0       	breq	.+4      	; 0xd9e <__stack+0x49f>
     d9a:	89 36       	cpi	r24, 0x69	; 105
     d9c:	61 f5       	brne	.+88     	; 0xdf6 <__stack+0x4f7>
     d9e:	56 01       	movw	r10, r12
     da0:	97 fe       	sbrs	r9, 7
     da2:	09 c0       	rjmp	.+18     	; 0xdb6 <__stack+0x4b7>
     da4:	24 e0       	ldi	r18, 0x04	; 4
     da6:	a2 0e       	add	r10, r18
     da8:	b1 1c       	adc	r11, r1
     daa:	f6 01       	movw	r30, r12
     dac:	60 81       	ld	r22, Z
     dae:	71 81       	ldd	r23, Z+1	; 0x01
     db0:	82 81       	ldd	r24, Z+2	; 0x02
     db2:	93 81       	ldd	r25, Z+3	; 0x03
     db4:	0a c0       	rjmp	.+20     	; 0xdca <__stack+0x4cb>
     db6:	f2 e0       	ldi	r31, 0x02	; 2
     db8:	af 0e       	add	r10, r31
     dba:	b1 1c       	adc	r11, r1
     dbc:	f6 01       	movw	r30, r12
     dbe:	60 81       	ld	r22, Z
     dc0:	71 81       	ldd	r23, Z+1	; 0x01
     dc2:	07 2e       	mov	r0, r23
     dc4:	00 0c       	add	r0, r0
     dc6:	88 0b       	sbc	r24, r24
     dc8:	99 0b       	sbc	r25, r25
     dca:	f9 2d       	mov	r31, r9
     dcc:	ff 76       	andi	r31, 0x6F	; 111
     dce:	9f 2e       	mov	r9, r31
     dd0:	97 ff       	sbrs	r25, 7
     dd2:	09 c0       	rjmp	.+18     	; 0xde6 <__stack+0x4e7>
     dd4:	90 95       	com	r25
     dd6:	80 95       	com	r24
     dd8:	70 95       	com	r23
     dda:	61 95       	neg	r22
     ddc:	7f 4f       	sbci	r23, 0xFF	; 255
     dde:	8f 4f       	sbci	r24, 0xFF	; 255
     de0:	9f 4f       	sbci	r25, 0xFF	; 255
     de2:	f0 68       	ori	r31, 0x80	; 128
     de4:	9f 2e       	mov	r9, r31
     de6:	2a e0       	ldi	r18, 0x0A	; 10
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	a3 01       	movw	r20, r6
     dec:	0e 94 71 09 	call	0x12e2	; 0x12e2 <__ultoa_invert>
     df0:	c8 2e       	mov	r12, r24
     df2:	c6 18       	sub	r12, r6
     df4:	3f c0       	rjmp	.+126    	; 0xe74 <__stack+0x575>
     df6:	09 2d       	mov	r16, r9
     df8:	85 37       	cpi	r24, 0x75	; 117
     dfa:	21 f4       	brne	.+8      	; 0xe04 <__stack+0x505>
     dfc:	0f 7e       	andi	r16, 0xEF	; 239
     dfe:	2a e0       	ldi	r18, 0x0A	; 10
     e00:	30 e0       	ldi	r19, 0x00	; 0
     e02:	1d c0       	rjmp	.+58     	; 0xe3e <__stack+0x53f>
     e04:	09 7f       	andi	r16, 0xF9	; 249
     e06:	8f 36       	cpi	r24, 0x6F	; 111
     e08:	91 f0       	breq	.+36     	; 0xe2e <__stack+0x52f>
     e0a:	18 f4       	brcc	.+6      	; 0xe12 <__stack+0x513>
     e0c:	88 35       	cpi	r24, 0x58	; 88
     e0e:	59 f0       	breq	.+22     	; 0xe26 <__stack+0x527>
     e10:	c3 c0       	rjmp	.+390    	; 0xf98 <__stack+0x699>
     e12:	80 37       	cpi	r24, 0x70	; 112
     e14:	19 f0       	breq	.+6      	; 0xe1c <__stack+0x51d>
     e16:	88 37       	cpi	r24, 0x78	; 120
     e18:	11 f0       	breq	.+4      	; 0xe1e <__stack+0x51f>
     e1a:	be c0       	rjmp	.+380    	; 0xf98 <__stack+0x699>
     e1c:	00 61       	ori	r16, 0x10	; 16
     e1e:	04 ff       	sbrs	r16, 4
     e20:	09 c0       	rjmp	.+18     	; 0xe34 <__stack+0x535>
     e22:	04 60       	ori	r16, 0x04	; 4
     e24:	07 c0       	rjmp	.+14     	; 0xe34 <__stack+0x535>
     e26:	94 fe       	sbrs	r9, 4
     e28:	08 c0       	rjmp	.+16     	; 0xe3a <__stack+0x53b>
     e2a:	06 60       	ori	r16, 0x06	; 6
     e2c:	06 c0       	rjmp	.+12     	; 0xe3a <__stack+0x53b>
     e2e:	28 e0       	ldi	r18, 0x08	; 8
     e30:	30 e0       	ldi	r19, 0x00	; 0
     e32:	05 c0       	rjmp	.+10     	; 0xe3e <__stack+0x53f>
     e34:	20 e1       	ldi	r18, 0x10	; 16
     e36:	30 e0       	ldi	r19, 0x00	; 0
     e38:	02 c0       	rjmp	.+4      	; 0xe3e <__stack+0x53f>
     e3a:	20 e1       	ldi	r18, 0x10	; 16
     e3c:	32 e0       	ldi	r19, 0x02	; 2
     e3e:	56 01       	movw	r10, r12
     e40:	07 ff       	sbrs	r16, 7
     e42:	09 c0       	rjmp	.+18     	; 0xe56 <__stack+0x557>
     e44:	84 e0       	ldi	r24, 0x04	; 4
     e46:	a8 0e       	add	r10, r24
     e48:	b1 1c       	adc	r11, r1
     e4a:	f6 01       	movw	r30, r12
     e4c:	60 81       	ld	r22, Z
     e4e:	71 81       	ldd	r23, Z+1	; 0x01
     e50:	82 81       	ldd	r24, Z+2	; 0x02
     e52:	93 81       	ldd	r25, Z+3	; 0x03
     e54:	08 c0       	rjmp	.+16     	; 0xe66 <__stack+0x567>
     e56:	f2 e0       	ldi	r31, 0x02	; 2
     e58:	af 0e       	add	r10, r31
     e5a:	b1 1c       	adc	r11, r1
     e5c:	f6 01       	movw	r30, r12
     e5e:	60 81       	ld	r22, Z
     e60:	71 81       	ldd	r23, Z+1	; 0x01
     e62:	80 e0       	ldi	r24, 0x00	; 0
     e64:	90 e0       	ldi	r25, 0x00	; 0
     e66:	a3 01       	movw	r20, r6
     e68:	0e 94 71 09 	call	0x12e2	; 0x12e2 <__ultoa_invert>
     e6c:	c8 2e       	mov	r12, r24
     e6e:	c6 18       	sub	r12, r6
     e70:	0f 77       	andi	r16, 0x7F	; 127
     e72:	90 2e       	mov	r9, r16
     e74:	96 fe       	sbrs	r9, 6
     e76:	0b c0       	rjmp	.+22     	; 0xe8e <__stack+0x58f>
     e78:	09 2d       	mov	r16, r9
     e7a:	0e 7f       	andi	r16, 0xFE	; 254
     e7c:	c1 16       	cp	r12, r17
     e7e:	50 f4       	brcc	.+20     	; 0xe94 <__stack+0x595>
     e80:	94 fe       	sbrs	r9, 4
     e82:	0a c0       	rjmp	.+20     	; 0xe98 <__stack+0x599>
     e84:	92 fc       	sbrc	r9, 2
     e86:	08 c0       	rjmp	.+16     	; 0xe98 <__stack+0x599>
     e88:	09 2d       	mov	r16, r9
     e8a:	0e 7e       	andi	r16, 0xEE	; 238
     e8c:	05 c0       	rjmp	.+10     	; 0xe98 <__stack+0x599>
     e8e:	dc 2c       	mov	r13, r12
     e90:	09 2d       	mov	r16, r9
     e92:	03 c0       	rjmp	.+6      	; 0xe9a <__stack+0x59b>
     e94:	dc 2c       	mov	r13, r12
     e96:	01 c0       	rjmp	.+2      	; 0xe9a <__stack+0x59b>
     e98:	d1 2e       	mov	r13, r17
     e9a:	04 ff       	sbrs	r16, 4
     e9c:	0d c0       	rjmp	.+26     	; 0xeb8 <__stack+0x5b9>
     e9e:	fe 01       	movw	r30, r28
     ea0:	ec 0d       	add	r30, r12
     ea2:	f1 1d       	adc	r31, r1
     ea4:	80 81       	ld	r24, Z
     ea6:	80 33       	cpi	r24, 0x30	; 48
     ea8:	11 f4       	brne	.+4      	; 0xeae <__stack+0x5af>
     eaa:	09 7e       	andi	r16, 0xE9	; 233
     eac:	09 c0       	rjmp	.+18     	; 0xec0 <__stack+0x5c1>
     eae:	02 ff       	sbrs	r16, 2
     eb0:	06 c0       	rjmp	.+12     	; 0xebe <__stack+0x5bf>
     eb2:	d3 94       	inc	r13
     eb4:	d3 94       	inc	r13
     eb6:	04 c0       	rjmp	.+8      	; 0xec0 <__stack+0x5c1>
     eb8:	80 2f       	mov	r24, r16
     eba:	86 78       	andi	r24, 0x86	; 134
     ebc:	09 f0       	breq	.+2      	; 0xec0 <__stack+0x5c1>
     ebe:	d3 94       	inc	r13
     ec0:	03 fd       	sbrc	r16, 3
     ec2:	11 c0       	rjmp	.+34     	; 0xee6 <__stack+0x5e7>
     ec4:	00 ff       	sbrs	r16, 0
     ec6:	06 c0       	rjmp	.+12     	; 0xed4 <__stack+0x5d5>
     ec8:	1c 2d       	mov	r17, r12
     eca:	d5 14       	cp	r13, r5
     ecc:	80 f4       	brcc	.+32     	; 0xeee <__stack+0x5ef>
     ece:	15 0d       	add	r17, r5
     ed0:	1d 19       	sub	r17, r13
     ed2:	0d c0       	rjmp	.+26     	; 0xeee <__stack+0x5ef>
     ed4:	d5 14       	cp	r13, r5
     ed6:	58 f4       	brcc	.+22     	; 0xeee <__stack+0x5ef>
     ed8:	b7 01       	movw	r22, r14
     eda:	80 e2       	ldi	r24, 0x20	; 32
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     ee2:	d3 94       	inc	r13
     ee4:	f7 cf       	rjmp	.-18     	; 0xed4 <__stack+0x5d5>
     ee6:	d5 14       	cp	r13, r5
     ee8:	10 f4       	brcc	.+4      	; 0xeee <__stack+0x5ef>
     eea:	5d 18       	sub	r5, r13
     eec:	01 c0       	rjmp	.+2      	; 0xef0 <__stack+0x5f1>
     eee:	51 2c       	mov	r5, r1
     ef0:	04 ff       	sbrs	r16, 4
     ef2:	10 c0       	rjmp	.+32     	; 0xf14 <__stack+0x615>
     ef4:	b7 01       	movw	r22, r14
     ef6:	80 e3       	ldi	r24, 0x30	; 48
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     efe:	02 ff       	sbrs	r16, 2
     f00:	17 c0       	rjmp	.+46     	; 0xf30 <__stack+0x631>
     f02:	01 fd       	sbrc	r16, 1
     f04:	03 c0       	rjmp	.+6      	; 0xf0c <__stack+0x60d>
     f06:	88 e7       	ldi	r24, 0x78	; 120
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	02 c0       	rjmp	.+4      	; 0xf10 <__stack+0x611>
     f0c:	88 e5       	ldi	r24, 0x58	; 88
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	b7 01       	movw	r22, r14
     f12:	0c c0       	rjmp	.+24     	; 0xf2c <__stack+0x62d>
     f14:	80 2f       	mov	r24, r16
     f16:	86 78       	andi	r24, 0x86	; 134
     f18:	59 f0       	breq	.+22     	; 0xf30 <__stack+0x631>
     f1a:	01 ff       	sbrs	r16, 1
     f1c:	02 c0       	rjmp	.+4      	; 0xf22 <__stack+0x623>
     f1e:	8b e2       	ldi	r24, 0x2B	; 43
     f20:	01 c0       	rjmp	.+2      	; 0xf24 <__stack+0x625>
     f22:	80 e2       	ldi	r24, 0x20	; 32
     f24:	07 fd       	sbrc	r16, 7
     f26:	8d e2       	ldi	r24, 0x2D	; 45
     f28:	b7 01       	movw	r22, r14
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     f30:	c1 16       	cp	r12, r17
     f32:	38 f4       	brcc	.+14     	; 0xf42 <__stack+0x643>
     f34:	b7 01       	movw	r22, r14
     f36:	80 e3       	ldi	r24, 0x30	; 48
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     f3e:	11 50       	subi	r17, 0x01	; 1
     f40:	f7 cf       	rjmp	.-18     	; 0xf30 <__stack+0x631>
     f42:	ca 94       	dec	r12
     f44:	f3 01       	movw	r30, r6
     f46:	ec 0d       	add	r30, r12
     f48:	f1 1d       	adc	r31, r1
     f4a:	80 81       	ld	r24, Z
     f4c:	b7 01       	movw	r22, r14
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     f54:	c1 10       	cpse	r12, r1
     f56:	f5 cf       	rjmp	.-22     	; 0xf42 <__stack+0x643>
     f58:	15 c0       	rjmp	.+42     	; 0xf84 <__stack+0x685>
     f5a:	f4 e0       	ldi	r31, 0x04	; 4
     f5c:	f5 15       	cp	r31, r5
     f5e:	60 f5       	brcc	.+88     	; 0xfb8 <__stack+0x6b9>
     f60:	84 e0       	ldi	r24, 0x04	; 4
     f62:	58 1a       	sub	r5, r24
     f64:	93 fe       	sbrs	r9, 3
     f66:	1f c0       	rjmp	.+62     	; 0xfa6 <__stack+0x6a7>
     f68:	01 11       	cpse	r16, r1
     f6a:	27 c0       	rjmp	.+78     	; 0xfba <__stack+0x6bb>
     f6c:	2c 85       	ldd	r18, Y+12	; 0x0c
     f6e:	23 ff       	sbrs	r18, 3
     f70:	2a c0       	rjmp	.+84     	; 0xfc6 <__stack+0x6c7>
     f72:	08 e6       	ldi	r16, 0x68	; 104
     f74:	10 e0       	ldi	r17, 0x00	; 0
     f76:	39 2d       	mov	r19, r9
     f78:	30 71       	andi	r19, 0x10	; 16
     f7a:	93 2e       	mov	r9, r19
     f7c:	f8 01       	movw	r30, r16
     f7e:	84 91       	lpm	r24, Z
     f80:	81 11       	cpse	r24, r1
     f82:	24 c0       	rjmp	.+72     	; 0xfcc <__stack+0x6cd>
     f84:	55 20       	and	r5, r5
     f86:	09 f4       	brne	.+2      	; 0xf8a <__stack+0x68b>
     f88:	e4 cc       	rjmp	.-1592   	; 0x952 <__stack+0x53>
     f8a:	b7 01       	movw	r22, r14
     f8c:	80 e2       	ldi	r24, 0x20	; 32
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     f94:	5a 94       	dec	r5
     f96:	f6 cf       	rjmp	.-20     	; 0xf84 <__stack+0x685>
     f98:	f7 01       	movw	r30, r14
     f9a:	86 81       	ldd	r24, Z+6	; 0x06
     f9c:	97 81       	ldd	r25, Z+7	; 0x07
     f9e:	26 c0       	rjmp	.+76     	; 0xfec <__stack+0x6ed>
     fa0:	8f ef       	ldi	r24, 0xFF	; 255
     fa2:	9f ef       	ldi	r25, 0xFF	; 255
     fa4:	23 c0       	rjmp	.+70     	; 0xfec <__stack+0x6ed>
     fa6:	b7 01       	movw	r22, r14
     fa8:	80 e2       	ldi	r24, 0x20	; 32
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     fb0:	5a 94       	dec	r5
     fb2:	51 10       	cpse	r5, r1
     fb4:	f8 cf       	rjmp	.-16     	; 0xfa6 <__stack+0x6a7>
     fb6:	d8 cf       	rjmp	.-80     	; 0xf68 <__stack+0x669>
     fb8:	51 2c       	mov	r5, r1
     fba:	b7 01       	movw	r22, r14
     fbc:	80 2f       	mov	r24, r16
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     fc4:	d3 cf       	rjmp	.-90     	; 0xf6c <__stack+0x66d>
     fc6:	0c e6       	ldi	r16, 0x6C	; 108
     fc8:	10 e0       	ldi	r17, 0x00	; 0
     fca:	d5 cf       	rjmp	.-86     	; 0xf76 <__stack+0x677>
     fcc:	91 10       	cpse	r9, r1
     fce:	80 52       	subi	r24, 0x20	; 32
     fd0:	b7 01       	movw	r22, r14
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	0e 94 1f 09 	call	0x123e	; 0x123e <fputc>
     fd8:	0f 5f       	subi	r16, 0xFF	; 255
     fda:	1f 4f       	sbci	r17, 0xFF	; 255
     fdc:	cf cf       	rjmp	.-98     	; 0xf7c <__stack+0x67d>
     fde:	23 e0       	ldi	r18, 0x03	; 3
     fe0:	25 15       	cp	r18, r5
     fe2:	10 f4       	brcc	.+4      	; 0xfe8 <__stack+0x6e9>
     fe4:	83 e0       	ldi	r24, 0x03	; 3
     fe6:	bd cf       	rjmp	.-134    	; 0xf62 <__stack+0x663>
     fe8:	51 2c       	mov	r5, r1
     fea:	c0 cf       	rjmp	.-128    	; 0xf6c <__stack+0x66d>
     fec:	60 96       	adiw	r28, 0x10	; 16
     fee:	e2 e1       	ldi	r30, 0x12	; 18
     ff0:	0c 94 16 08 	jmp	0x102c	; 0x102c <__epilogue_restores__>

00000ff4 <__prologue_saves__>:
     ff4:	2f 92       	push	r2
     ff6:	3f 92       	push	r3
     ff8:	4f 92       	push	r4
     ffa:	5f 92       	push	r5
     ffc:	6f 92       	push	r6
     ffe:	7f 92       	push	r7
    1000:	8f 92       	push	r8
    1002:	9f 92       	push	r9
    1004:	af 92       	push	r10
    1006:	bf 92       	push	r11
    1008:	cf 92       	push	r12
    100a:	df 92       	push	r13
    100c:	ef 92       	push	r14
    100e:	ff 92       	push	r15
    1010:	0f 93       	push	r16
    1012:	1f 93       	push	r17
    1014:	cf 93       	push	r28
    1016:	df 93       	push	r29
    1018:	cd b7       	in	r28, 0x3d	; 61
    101a:	de b7       	in	r29, 0x3e	; 62
    101c:	ca 1b       	sub	r28, r26
    101e:	db 0b       	sbc	r29, r27
    1020:	0f b6       	in	r0, 0x3f	; 63
    1022:	f8 94       	cli
    1024:	de bf       	out	0x3e, r29	; 62
    1026:	0f be       	out	0x3f, r0	; 63
    1028:	cd bf       	out	0x3d, r28	; 61
    102a:	09 94       	ijmp

0000102c <__epilogue_restores__>:
    102c:	2a 88       	ldd	r2, Y+18	; 0x12
    102e:	39 88       	ldd	r3, Y+17	; 0x11
    1030:	48 88       	ldd	r4, Y+16	; 0x10
    1032:	5f 84       	ldd	r5, Y+15	; 0x0f
    1034:	6e 84       	ldd	r6, Y+14	; 0x0e
    1036:	7d 84       	ldd	r7, Y+13	; 0x0d
    1038:	8c 84       	ldd	r8, Y+12	; 0x0c
    103a:	9b 84       	ldd	r9, Y+11	; 0x0b
    103c:	aa 84       	ldd	r10, Y+10	; 0x0a
    103e:	b9 84       	ldd	r11, Y+9	; 0x09
    1040:	c8 84       	ldd	r12, Y+8	; 0x08
    1042:	df 80       	ldd	r13, Y+7	; 0x07
    1044:	ee 80       	ldd	r14, Y+6	; 0x06
    1046:	fd 80       	ldd	r15, Y+5	; 0x05
    1048:	0c 81       	ldd	r16, Y+4	; 0x04
    104a:	1b 81       	ldd	r17, Y+3	; 0x03
    104c:	aa 81       	ldd	r26, Y+2	; 0x02
    104e:	b9 81       	ldd	r27, Y+1	; 0x01
    1050:	ce 0f       	add	r28, r30
    1052:	d1 1d       	adc	r29, r1
    1054:	0f b6       	in	r0, 0x3f	; 63
    1056:	f8 94       	cli
    1058:	de bf       	out	0x3e, r29	; 62
    105a:	0f be       	out	0x3f, r0	; 63
    105c:	cd bf       	out	0x3d, r28	; 61
    105e:	ed 01       	movw	r28, r26
    1060:	08 95       	ret

00001062 <__ftoa_engine>:
    1062:	28 30       	cpi	r18, 0x08	; 8
    1064:	08 f0       	brcs	.+2      	; 0x1068 <__ftoa_engine+0x6>
    1066:	27 e0       	ldi	r18, 0x07	; 7
    1068:	33 27       	eor	r19, r19
    106a:	da 01       	movw	r26, r20
    106c:	99 0f       	add	r25, r25
    106e:	31 1d       	adc	r19, r1
    1070:	87 fd       	sbrc	r24, 7
    1072:	91 60       	ori	r25, 0x01	; 1
    1074:	00 96       	adiw	r24, 0x00	; 0
    1076:	61 05       	cpc	r22, r1
    1078:	71 05       	cpc	r23, r1
    107a:	39 f4       	brne	.+14     	; 0x108a <__ftoa_engine+0x28>
    107c:	32 60       	ori	r19, 0x02	; 2
    107e:	2e 5f       	subi	r18, 0xFE	; 254
    1080:	3d 93       	st	X+, r19
    1082:	30 e3       	ldi	r19, 0x30	; 48
    1084:	2a 95       	dec	r18
    1086:	e1 f7       	brne	.-8      	; 0x1080 <__ftoa_engine+0x1e>
    1088:	08 95       	ret
    108a:	9f 3f       	cpi	r25, 0xFF	; 255
    108c:	30 f0       	brcs	.+12     	; 0x109a <__ftoa_engine+0x38>
    108e:	80 38       	cpi	r24, 0x80	; 128
    1090:	71 05       	cpc	r23, r1
    1092:	61 05       	cpc	r22, r1
    1094:	09 f0       	breq	.+2      	; 0x1098 <__ftoa_engine+0x36>
    1096:	3c 5f       	subi	r19, 0xFC	; 252
    1098:	3c 5f       	subi	r19, 0xFC	; 252
    109a:	3d 93       	st	X+, r19
    109c:	91 30       	cpi	r25, 0x01	; 1
    109e:	08 f0       	brcs	.+2      	; 0x10a2 <__ftoa_engine+0x40>
    10a0:	80 68       	ori	r24, 0x80	; 128
    10a2:	91 1d       	adc	r25, r1
    10a4:	df 93       	push	r29
    10a6:	cf 93       	push	r28
    10a8:	1f 93       	push	r17
    10aa:	0f 93       	push	r16
    10ac:	ff 92       	push	r15
    10ae:	ef 92       	push	r14
    10b0:	19 2f       	mov	r17, r25
    10b2:	98 7f       	andi	r25, 0xF8	; 248
    10b4:	96 95       	lsr	r25
    10b6:	e9 2f       	mov	r30, r25
    10b8:	96 95       	lsr	r25
    10ba:	96 95       	lsr	r25
    10bc:	e9 0f       	add	r30, r25
    10be:	ff 27       	eor	r31, r31
    10c0:	e6 53       	subi	r30, 0x36	; 54
    10c2:	ff 4f       	sbci	r31, 0xFF	; 255
    10c4:	99 27       	eor	r25, r25
    10c6:	33 27       	eor	r19, r19
    10c8:	ee 24       	eor	r14, r14
    10ca:	ff 24       	eor	r15, r15
    10cc:	a7 01       	movw	r20, r14
    10ce:	e7 01       	movw	r28, r14
    10d0:	05 90       	lpm	r0, Z+
    10d2:	08 94       	sec
    10d4:	07 94       	ror	r0
    10d6:	28 f4       	brcc	.+10     	; 0x10e2 <__ftoa_engine+0x80>
    10d8:	36 0f       	add	r19, r22
    10da:	e7 1e       	adc	r14, r23
    10dc:	f8 1e       	adc	r15, r24
    10de:	49 1f       	adc	r20, r25
    10e0:	51 1d       	adc	r21, r1
    10e2:	66 0f       	add	r22, r22
    10e4:	77 1f       	adc	r23, r23
    10e6:	88 1f       	adc	r24, r24
    10e8:	99 1f       	adc	r25, r25
    10ea:	06 94       	lsr	r0
    10ec:	a1 f7       	brne	.-24     	; 0x10d6 <__ftoa_engine+0x74>
    10ee:	05 90       	lpm	r0, Z+
    10f0:	07 94       	ror	r0
    10f2:	28 f4       	brcc	.+10     	; 0x10fe <__ftoa_engine+0x9c>
    10f4:	e7 0e       	add	r14, r23
    10f6:	f8 1e       	adc	r15, r24
    10f8:	49 1f       	adc	r20, r25
    10fa:	56 1f       	adc	r21, r22
    10fc:	c1 1d       	adc	r28, r1
    10fe:	77 0f       	add	r23, r23
    1100:	88 1f       	adc	r24, r24
    1102:	99 1f       	adc	r25, r25
    1104:	66 1f       	adc	r22, r22
    1106:	06 94       	lsr	r0
    1108:	a1 f7       	brne	.-24     	; 0x10f2 <__ftoa_engine+0x90>
    110a:	05 90       	lpm	r0, Z+
    110c:	07 94       	ror	r0
    110e:	28 f4       	brcc	.+10     	; 0x111a <__ftoa_engine+0xb8>
    1110:	f8 0e       	add	r15, r24
    1112:	49 1f       	adc	r20, r25
    1114:	56 1f       	adc	r21, r22
    1116:	c7 1f       	adc	r28, r23
    1118:	d1 1d       	adc	r29, r1
    111a:	88 0f       	add	r24, r24
    111c:	99 1f       	adc	r25, r25
    111e:	66 1f       	adc	r22, r22
    1120:	77 1f       	adc	r23, r23
    1122:	06 94       	lsr	r0
    1124:	a1 f7       	brne	.-24     	; 0x110e <__ftoa_engine+0xac>
    1126:	05 90       	lpm	r0, Z+
    1128:	07 94       	ror	r0
    112a:	20 f4       	brcc	.+8      	; 0x1134 <__ftoa_engine+0xd2>
    112c:	49 0f       	add	r20, r25
    112e:	56 1f       	adc	r21, r22
    1130:	c7 1f       	adc	r28, r23
    1132:	d8 1f       	adc	r29, r24
    1134:	99 0f       	add	r25, r25
    1136:	66 1f       	adc	r22, r22
    1138:	77 1f       	adc	r23, r23
    113a:	88 1f       	adc	r24, r24
    113c:	06 94       	lsr	r0
    113e:	a9 f7       	brne	.-22     	; 0x112a <__ftoa_engine+0xc8>
    1140:	84 91       	lpm	r24, Z
    1142:	10 95       	com	r17
    1144:	17 70       	andi	r17, 0x07	; 7
    1146:	41 f0       	breq	.+16     	; 0x1158 <__ftoa_engine+0xf6>
    1148:	d6 95       	lsr	r29
    114a:	c7 95       	ror	r28
    114c:	57 95       	ror	r21
    114e:	47 95       	ror	r20
    1150:	f7 94       	ror	r15
    1152:	e7 94       	ror	r14
    1154:	1a 95       	dec	r17
    1156:	c1 f7       	brne	.-16     	; 0x1148 <__ftoa_engine+0xe6>
    1158:	e0 e7       	ldi	r30, 0x70	; 112
    115a:	f0 e0       	ldi	r31, 0x00	; 0
    115c:	68 94       	set
    115e:	15 90       	lpm	r1, Z+
    1160:	15 91       	lpm	r17, Z+
    1162:	35 91       	lpm	r19, Z+
    1164:	65 91       	lpm	r22, Z+
    1166:	95 91       	lpm	r25, Z+
    1168:	05 90       	lpm	r0, Z+
    116a:	7f e2       	ldi	r23, 0x2F	; 47
    116c:	73 95       	inc	r23
    116e:	e1 18       	sub	r14, r1
    1170:	f1 0a       	sbc	r15, r17
    1172:	43 0b       	sbc	r20, r19
    1174:	56 0b       	sbc	r21, r22
    1176:	c9 0b       	sbc	r28, r25
    1178:	d0 09       	sbc	r29, r0
    117a:	c0 f7       	brcc	.-16     	; 0x116c <__ftoa_engine+0x10a>
    117c:	e1 0c       	add	r14, r1
    117e:	f1 1e       	adc	r15, r17
    1180:	43 1f       	adc	r20, r19
    1182:	56 1f       	adc	r21, r22
    1184:	c9 1f       	adc	r28, r25
    1186:	d0 1d       	adc	r29, r0
    1188:	7e f4       	brtc	.+30     	; 0x11a8 <__ftoa_engine+0x146>
    118a:	70 33       	cpi	r23, 0x30	; 48
    118c:	11 f4       	brne	.+4      	; 0x1192 <__ftoa_engine+0x130>
    118e:	8a 95       	dec	r24
    1190:	e6 cf       	rjmp	.-52     	; 0x115e <__ftoa_engine+0xfc>
    1192:	e8 94       	clt
    1194:	01 50       	subi	r16, 0x01	; 1
    1196:	30 f0       	brcs	.+12     	; 0x11a4 <__ftoa_engine+0x142>
    1198:	08 0f       	add	r16, r24
    119a:	0a f4       	brpl	.+2      	; 0x119e <__ftoa_engine+0x13c>
    119c:	00 27       	eor	r16, r16
    119e:	02 17       	cp	r16, r18
    11a0:	08 f4       	brcc	.+2      	; 0x11a4 <__ftoa_engine+0x142>
    11a2:	20 2f       	mov	r18, r16
    11a4:	23 95       	inc	r18
    11a6:	02 2f       	mov	r16, r18
    11a8:	7a 33       	cpi	r23, 0x3A	; 58
    11aa:	28 f0       	brcs	.+10     	; 0x11b6 <__ftoa_engine+0x154>
    11ac:	79 e3       	ldi	r23, 0x39	; 57
    11ae:	7d 93       	st	X+, r23
    11b0:	2a 95       	dec	r18
    11b2:	e9 f7       	brne	.-6      	; 0x11ae <__ftoa_engine+0x14c>
    11b4:	10 c0       	rjmp	.+32     	; 0x11d6 <__ftoa_engine+0x174>
    11b6:	7d 93       	st	X+, r23
    11b8:	2a 95       	dec	r18
    11ba:	89 f6       	brne	.-94     	; 0x115e <__ftoa_engine+0xfc>
    11bc:	06 94       	lsr	r0
    11be:	97 95       	ror	r25
    11c0:	67 95       	ror	r22
    11c2:	37 95       	ror	r19
    11c4:	17 95       	ror	r17
    11c6:	17 94       	ror	r1
    11c8:	e1 18       	sub	r14, r1
    11ca:	f1 0a       	sbc	r15, r17
    11cc:	43 0b       	sbc	r20, r19
    11ce:	56 0b       	sbc	r21, r22
    11d0:	c9 0b       	sbc	r28, r25
    11d2:	d0 09       	sbc	r29, r0
    11d4:	98 f0       	brcs	.+38     	; 0x11fc <__ftoa_engine+0x19a>
    11d6:	23 95       	inc	r18
    11d8:	7e 91       	ld	r23, -X
    11da:	73 95       	inc	r23
    11dc:	7a 33       	cpi	r23, 0x3A	; 58
    11de:	08 f0       	brcs	.+2      	; 0x11e2 <__ftoa_engine+0x180>
    11e0:	70 e3       	ldi	r23, 0x30	; 48
    11e2:	7c 93       	st	X, r23
    11e4:	20 13       	cpse	r18, r16
    11e6:	b8 f7       	brcc	.-18     	; 0x11d6 <__ftoa_engine+0x174>
    11e8:	7e 91       	ld	r23, -X
    11ea:	70 61       	ori	r23, 0x10	; 16
    11ec:	7d 93       	st	X+, r23
    11ee:	30 f0       	brcs	.+12     	; 0x11fc <__ftoa_engine+0x19a>
    11f0:	83 95       	inc	r24
    11f2:	71 e3       	ldi	r23, 0x31	; 49
    11f4:	7d 93       	st	X+, r23
    11f6:	70 e3       	ldi	r23, 0x30	; 48
    11f8:	2a 95       	dec	r18
    11fa:	e1 f7       	brne	.-8      	; 0x11f4 <__ftoa_engine+0x192>
    11fc:	11 24       	eor	r1, r1
    11fe:	ef 90       	pop	r14
    1200:	ff 90       	pop	r15
    1202:	0f 91       	pop	r16
    1204:	1f 91       	pop	r17
    1206:	cf 91       	pop	r28
    1208:	df 91       	pop	r29
    120a:	99 27       	eor	r25, r25
    120c:	87 fd       	sbrc	r24, 7
    120e:	90 95       	com	r25
    1210:	08 95       	ret

00001212 <strnlen_P>:
    1212:	fc 01       	movw	r30, r24
    1214:	05 90       	lpm	r0, Z+
    1216:	61 50       	subi	r22, 0x01	; 1
    1218:	70 40       	sbci	r23, 0x00	; 0
    121a:	01 10       	cpse	r0, r1
    121c:	d8 f7       	brcc	.-10     	; 0x1214 <strnlen_P+0x2>
    121e:	80 95       	com	r24
    1220:	90 95       	com	r25
    1222:	8e 0f       	add	r24, r30
    1224:	9f 1f       	adc	r25, r31
    1226:	08 95       	ret

00001228 <strnlen>:
    1228:	fc 01       	movw	r30, r24
    122a:	61 50       	subi	r22, 0x01	; 1
    122c:	70 40       	sbci	r23, 0x00	; 0
    122e:	01 90       	ld	r0, Z+
    1230:	01 10       	cpse	r0, r1
    1232:	d8 f7       	brcc	.-10     	; 0x122a <strnlen+0x2>
    1234:	80 95       	com	r24
    1236:	90 95       	com	r25
    1238:	8e 0f       	add	r24, r30
    123a:	9f 1f       	adc	r25, r31
    123c:	08 95       	ret

0000123e <fputc>:
    123e:	0f 93       	push	r16
    1240:	1f 93       	push	r17
    1242:	cf 93       	push	r28
    1244:	df 93       	push	r29
    1246:	fb 01       	movw	r30, r22
    1248:	23 81       	ldd	r18, Z+3	; 0x03
    124a:	21 fd       	sbrc	r18, 1
    124c:	03 c0       	rjmp	.+6      	; 0x1254 <fputc+0x16>
    124e:	8f ef       	ldi	r24, 0xFF	; 255
    1250:	9f ef       	ldi	r25, 0xFF	; 255
    1252:	2c c0       	rjmp	.+88     	; 0x12ac <fputc+0x6e>
    1254:	22 ff       	sbrs	r18, 2
    1256:	16 c0       	rjmp	.+44     	; 0x1284 <fputc+0x46>
    1258:	46 81       	ldd	r20, Z+6	; 0x06
    125a:	57 81       	ldd	r21, Z+7	; 0x07
    125c:	24 81       	ldd	r18, Z+4	; 0x04
    125e:	35 81       	ldd	r19, Z+5	; 0x05
    1260:	42 17       	cp	r20, r18
    1262:	53 07       	cpc	r21, r19
    1264:	44 f4       	brge	.+16     	; 0x1276 <fputc+0x38>
    1266:	a0 81       	ld	r26, Z
    1268:	b1 81       	ldd	r27, Z+1	; 0x01
    126a:	9d 01       	movw	r18, r26
    126c:	2f 5f       	subi	r18, 0xFF	; 255
    126e:	3f 4f       	sbci	r19, 0xFF	; 255
    1270:	31 83       	std	Z+1, r19	; 0x01
    1272:	20 83       	st	Z, r18
    1274:	8c 93       	st	X, r24
    1276:	26 81       	ldd	r18, Z+6	; 0x06
    1278:	37 81       	ldd	r19, Z+7	; 0x07
    127a:	2f 5f       	subi	r18, 0xFF	; 255
    127c:	3f 4f       	sbci	r19, 0xFF	; 255
    127e:	37 83       	std	Z+7, r19	; 0x07
    1280:	26 83       	std	Z+6, r18	; 0x06
    1282:	14 c0       	rjmp	.+40     	; 0x12ac <fputc+0x6e>
    1284:	8b 01       	movw	r16, r22
    1286:	ec 01       	movw	r28, r24
    1288:	fb 01       	movw	r30, r22
    128a:	00 84       	ldd	r0, Z+8	; 0x08
    128c:	f1 85       	ldd	r31, Z+9	; 0x09
    128e:	e0 2d       	mov	r30, r0
    1290:	09 95       	icall
    1292:	89 2b       	or	r24, r25
    1294:	e1 f6       	brne	.-72     	; 0x124e <fputc+0x10>
    1296:	d8 01       	movw	r26, r16
    1298:	16 96       	adiw	r26, 0x06	; 6
    129a:	8d 91       	ld	r24, X+
    129c:	9c 91       	ld	r25, X
    129e:	17 97       	sbiw	r26, 0x07	; 7
    12a0:	01 96       	adiw	r24, 0x01	; 1
    12a2:	17 96       	adiw	r26, 0x07	; 7
    12a4:	9c 93       	st	X, r25
    12a6:	8e 93       	st	-X, r24
    12a8:	16 97       	sbiw	r26, 0x06	; 6
    12aa:	ce 01       	movw	r24, r28
    12ac:	df 91       	pop	r29
    12ae:	cf 91       	pop	r28
    12b0:	1f 91       	pop	r17
    12b2:	0f 91       	pop	r16
    12b4:	08 95       	ret

000012b6 <printf>:
    12b6:	a0 e0       	ldi	r26, 0x00	; 0
    12b8:	b0 e0       	ldi	r27, 0x00	; 0
    12ba:	e1 e6       	ldi	r30, 0x61	; 97
    12bc:	f9 e0       	ldi	r31, 0x09	; 9
    12be:	0c 94 0a 08 	jmp	0x1014	; 0x1014 <__prologue_saves__+0x20>
    12c2:	ae 01       	movw	r20, r28
    12c4:	4b 5f       	subi	r20, 0xFB	; 251
    12c6:	5f 4f       	sbci	r21, 0xFF	; 255
    12c8:	fa 01       	movw	r30, r20
    12ca:	61 91       	ld	r22, Z+
    12cc:	71 91       	ld	r23, Z+
    12ce:	af 01       	movw	r20, r30
    12d0:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end+0x2>
    12d4:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x3>
    12d8:	0e 94 7d 04 	call	0x8fa	; 0x8fa <vfprintf>
    12dc:	e2 e0       	ldi	r30, 0x02	; 2
    12de:	0c 94 26 08 	jmp	0x104c	; 0x104c <__epilogue_restores__+0x20>

000012e2 <__ultoa_invert>:
    12e2:	fa 01       	movw	r30, r20
    12e4:	aa 27       	eor	r26, r26
    12e6:	28 30       	cpi	r18, 0x08	; 8
    12e8:	51 f1       	breq	.+84     	; 0x133e <__ultoa_invert+0x5c>
    12ea:	20 31       	cpi	r18, 0x10	; 16
    12ec:	81 f1       	breq	.+96     	; 0x134e <__ultoa_invert+0x6c>
    12ee:	e8 94       	clt
    12f0:	6f 93       	push	r22
    12f2:	6e 7f       	andi	r22, 0xFE	; 254
    12f4:	6e 5f       	subi	r22, 0xFE	; 254
    12f6:	7f 4f       	sbci	r23, 0xFF	; 255
    12f8:	8f 4f       	sbci	r24, 0xFF	; 255
    12fa:	9f 4f       	sbci	r25, 0xFF	; 255
    12fc:	af 4f       	sbci	r26, 0xFF	; 255
    12fe:	b1 e0       	ldi	r27, 0x01	; 1
    1300:	3e d0       	rcall	.+124    	; 0x137e <__ultoa_invert+0x9c>
    1302:	b4 e0       	ldi	r27, 0x04	; 4
    1304:	3c d0       	rcall	.+120    	; 0x137e <__ultoa_invert+0x9c>
    1306:	67 0f       	add	r22, r23
    1308:	78 1f       	adc	r23, r24
    130a:	89 1f       	adc	r24, r25
    130c:	9a 1f       	adc	r25, r26
    130e:	a1 1d       	adc	r26, r1
    1310:	68 0f       	add	r22, r24
    1312:	79 1f       	adc	r23, r25
    1314:	8a 1f       	adc	r24, r26
    1316:	91 1d       	adc	r25, r1
    1318:	a1 1d       	adc	r26, r1
    131a:	6a 0f       	add	r22, r26
    131c:	71 1d       	adc	r23, r1
    131e:	81 1d       	adc	r24, r1
    1320:	91 1d       	adc	r25, r1
    1322:	a1 1d       	adc	r26, r1
    1324:	20 d0       	rcall	.+64     	; 0x1366 <__ultoa_invert+0x84>
    1326:	09 f4       	brne	.+2      	; 0x132a <__ultoa_invert+0x48>
    1328:	68 94       	set
    132a:	3f 91       	pop	r19
    132c:	2a e0       	ldi	r18, 0x0A	; 10
    132e:	26 9f       	mul	r18, r22
    1330:	11 24       	eor	r1, r1
    1332:	30 19       	sub	r19, r0
    1334:	30 5d       	subi	r19, 0xD0	; 208
    1336:	31 93       	st	Z+, r19
    1338:	de f6       	brtc	.-74     	; 0x12f0 <__ultoa_invert+0xe>
    133a:	cf 01       	movw	r24, r30
    133c:	08 95       	ret
    133e:	46 2f       	mov	r20, r22
    1340:	47 70       	andi	r20, 0x07	; 7
    1342:	40 5d       	subi	r20, 0xD0	; 208
    1344:	41 93       	st	Z+, r20
    1346:	b3 e0       	ldi	r27, 0x03	; 3
    1348:	0f d0       	rcall	.+30     	; 0x1368 <__ultoa_invert+0x86>
    134a:	c9 f7       	brne	.-14     	; 0x133e <__ultoa_invert+0x5c>
    134c:	f6 cf       	rjmp	.-20     	; 0x133a <__ultoa_invert+0x58>
    134e:	46 2f       	mov	r20, r22
    1350:	4f 70       	andi	r20, 0x0F	; 15
    1352:	40 5d       	subi	r20, 0xD0	; 208
    1354:	4a 33       	cpi	r20, 0x3A	; 58
    1356:	18 f0       	brcs	.+6      	; 0x135e <__ultoa_invert+0x7c>
    1358:	49 5d       	subi	r20, 0xD9	; 217
    135a:	31 fd       	sbrc	r19, 1
    135c:	40 52       	subi	r20, 0x20	; 32
    135e:	41 93       	st	Z+, r20
    1360:	02 d0       	rcall	.+4      	; 0x1366 <__ultoa_invert+0x84>
    1362:	a9 f7       	brne	.-22     	; 0x134e <__ultoa_invert+0x6c>
    1364:	ea cf       	rjmp	.-44     	; 0x133a <__ultoa_invert+0x58>
    1366:	b4 e0       	ldi	r27, 0x04	; 4
    1368:	a6 95       	lsr	r26
    136a:	97 95       	ror	r25
    136c:	87 95       	ror	r24
    136e:	77 95       	ror	r23
    1370:	67 95       	ror	r22
    1372:	ba 95       	dec	r27
    1374:	c9 f7       	brne	.-14     	; 0x1368 <__ultoa_invert+0x86>
    1376:	00 97       	sbiw	r24, 0x00	; 0
    1378:	61 05       	cpc	r22, r1
    137a:	71 05       	cpc	r23, r1
    137c:	08 95       	ret
    137e:	9b 01       	movw	r18, r22
    1380:	ac 01       	movw	r20, r24
    1382:	0a 2e       	mov	r0, r26
    1384:	06 94       	lsr	r0
    1386:	57 95       	ror	r21
    1388:	47 95       	ror	r20
    138a:	37 95       	ror	r19
    138c:	27 95       	ror	r18
    138e:	ba 95       	dec	r27
    1390:	c9 f7       	brne	.-14     	; 0x1384 <__ultoa_invert+0xa2>
    1392:	62 0f       	add	r22, r18
    1394:	73 1f       	adc	r23, r19
    1396:	84 1f       	adc	r24, r20
    1398:	95 1f       	adc	r25, r21
    139a:	a0 1d       	adc	r26, r0
    139c:	08 95       	ret

0000139e <eeprom_read_byte>:
    139e:	f9 99       	sbic	0x1f, 1	; 31
    13a0:	fe cf       	rjmp	.-4      	; 0x139e <eeprom_read_byte>
    13a2:	92 bd       	out	0x22, r25	; 34
    13a4:	81 bd       	out	0x21, r24	; 33
    13a6:	f8 9a       	sbi	0x1f, 0	; 31
    13a8:	99 27       	eor	r25, r25
    13aa:	80 b5       	in	r24, 0x20	; 32
    13ac:	08 95       	ret

000013ae <eeprom_write_byte>:
    13ae:	26 2f       	mov	r18, r22

000013b0 <eeprom_write_r18>:
    13b0:	f9 99       	sbic	0x1f, 1	; 31
    13b2:	fe cf       	rjmp	.-4      	; 0x13b0 <eeprom_write_r18>
    13b4:	1f ba       	out	0x1f, r1	; 31
    13b6:	92 bd       	out	0x22, r25	; 34
    13b8:	81 bd       	out	0x21, r24	; 33
    13ba:	20 bd       	out	0x20, r18	; 32
    13bc:	0f b6       	in	r0, 0x3f	; 63
    13be:	f8 94       	cli
    13c0:	fa 9a       	sbi	0x1f, 2	; 31
    13c2:	f9 9a       	sbi	0x1f, 1	; 31
    13c4:	0f be       	out	0x3f, r0	; 63
    13c6:	01 96       	adiw	r24, 0x01	; 1
    13c8:	08 95       	ret

000013ca <_exit>:
    13ca:	f8 94       	cli

000013cc <__stop_program>:
    13cc:	ff cf       	rjmp	.-2      	; 0x13cc <__stop_program>
